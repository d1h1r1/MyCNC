import json
import math
import multiprocessing
import threading
import time
from multiprocessing.pool import ThreadPool
import vtk
from opencamlib import ocl
# import camvtk
from src import camvtk
import ngc_writer
from toolpath_examples import path_algorithm


class tool_path:
    def __init__(self, file):
        self.file = None
        self.tool_diameter = 3
        self.surface = None
        self.cutter = None

    def analyze_file(self):
        self.surface = STLSurfaceSource(self.file)

    def set_tool(self, type, *args):
        pass


# 自适应避让刀路
def adaptive_path_drop_cutter(surface, cutter, paths):
    apdc = ocl.AdaptivePathDropCutter()
    # apdc = ocl.AdaptiveWaterline()
    # apdc = ocl.PathDropCutter()
    # apdc.setZ(-1)
    apdc.setSTL(surface)
    apdc.setCutter(cutter)
    apdc.setSampling(0.04)  # 最大采样或“步进”距离
    # 防止丢失STL模型的任何细节，这个数应该与最小的三角形相似或更小
    apdc.setMinSampling(0.01)  # 最小采样或“步进”距离
    # 该算法细分了工具路径的“陡峭”部分
    # 直到我们达到这个极限。

    cl_paths = []
    n_points = 0
    # print(6666666666)
    for path in paths:
        apdc.setPath(path)
        apdc.run()
        cl_points = apdc.getCLPoints()
        n_points = n_points + len(cl_points)
        cl_paths.append(cl_points)
    # print(55555555555)
    # print(cl_paths, n_points)
    return cl_paths, n_points


# 这可以是任意三角形的源
# 只要它产生一个我们可以使用的ocl.STLSurf（）
def STLSurfaceSource(filename):
    stl = camvtk.STLSurf(filename)
    polydata = stl.src.GetOutput()
    # print(polydata)
    s = ocl.STLSurf()
    camvtk.vtkPolyData2OCLSTL(polydata, s)
    return s


# 筛选单个路径
def filter_path(path, tol):
    f = ocl.LineCLFilter()
    f.setTolerance(tol)
    for p in path:
        # if p.z == 0:
        #     continue
        p2 = ocl.CLPoint(p.x, p.y, p.z)
        f.addCLPoint(p2)
    f.run()
    return f.getCLPoints()


# 为了减少g代码的大小，我们在这里进行过滤。（这不是严格要求的，可以省略）
# 如果有过滤器的话，我们可以在这里检测到G2/G3电弧。
# 想法:
# 如果原始工具路径中有三个点（p1,p2,p3）
# 和点p2在直线p1-p3的容差范围内
# 然后我们将路径简化为（p1,p3）
def filterCLPaths(cl_paths, tolerance=0.001):
    cl_filtered_paths = []
    t_before = time.time()
    n_filtered = 0
    for cl_path in cl_paths:
        cl_filtered = filter_path(cl_path, tolerance)
        n_filtered = n_filtered + len(cl_filtered)
        cl_filtered_paths.append(cl_filtered)
    return cl_filtered_paths, n_filtered


# 使用ngc_writer并将g代码写入标准输出或文件
def write_zig_gcode_file(filename, n_triangles, t1, n1, tol, t2, n2, toolpath):
    ngc_writer.clearance_height = 20  # 安全高度
    ngc_writer.feed_height = 3  # 进刀高度
    ngc_writer.feed = 600  # 进给速度
    ngc_writer.plunge_feed = 600  # z轴进给速度
    ngc_writer.metric = True  # 公尺/英尺 flag
    # ngc_writer.comment(" OpenCAMLib %s" % ocl.version())
    # ngc_writer.comment(" STL surface: %s" % filename)
    # ngc_writer.comment("   triangles: %d" % n_triangles)
    # ngc_writer.comment(" OpenCAMLib::AdaptivePathDropCutter run took %.2f s" % t1)
    # ngc_writer.comment(" got %d raw CL-points " % n1)
    # ngc_writer.comment(" filtering to tolerance %.4f " % (tol))
    # ngc_writer.comment(" got %d filtered CL-points. Filter done in %.3f s " % (n2, t2))
    # ngc_writer.preamble()
    first = True
    # print(toolpath)
    for path in toolpath:
        if len(path) == 0:
            continue
        try:
            if first:
                ngc_writer.pen_up()
                first_pt = path[0]
                ngc_writer.xy_rapid_to(first_pt.x, first_pt.y)
                ngc_writer.pen_down(first_pt.z)
                # first = False
            for p in path[1:]:
                ngc_writer.line_to(p.x, p.y, p.z)
        except Exception as e:
            print("write gcode", e)
    # ngc_writer.postamble()  # 结束


def gcode_file(toolpath):
    ngc_writer.clearance_height = 20  # 安全高度
    ngc_writer.feed_height = 3  # 进刀高度
    ngc_writer.feed = 600  # 进给速度
    ngc_writer.plunge_feed = 600  # z轴进给速度
    ngc_writer.metric = True  # 公尺/英尺 flag
    first = True
    for path in toolpath:
        try:
            if first:
                ngc_writer.pen_up()
                first_pt = path[0]
                ngc_writer.xy_rapid_to(first_pt[0], first_pt[1])
                ngc_writer.pen_down(first_pt[2])
                first = False
            for p in path[1:]:
                ngc_writer.line_to(p[0], p[1], p[2])
        except Exception as e:
            print("write gcode", e)


# 图像可视化
def vtk_visualize_parallel_finish_zig(stlfile, toolpaths):
    myscreen = camvtk.VTKScreen()
    stl = camvtk.STLSurf(stlfile)
    myscreen.addActor(stl)
    stl.SetSurface()
    stl.SetColor(camvtk.cyan)
    # myscreen.camera.SetPosition(15, 13, 7)
    # myscreen.camera.SetFocalPoint(5, 5, 0)

    rapid_height = 10  # 安全高度
    feed_height = 10   # 进给高度
    rapidColor = camvtk.pink
    XYrapidColor = camvtk.green
    plungeColor = camvtk.red
    feedColor = camvtk.yellow
    pos = ocl.Point(0, 0, 0)
    first = True
    for path in toolpaths:
        if len(path) == 0:
            continue
        try:
            first_pt = path[0]
            if first:  # 绿色球体表示开始位置
                myscreen.addActor(
                    camvtk.Sphere(center=(first_pt.x, first_pt.y, rapid_height), radius=1, color=camvtk.green))
                pos = ocl.Point(first_pt.x, first_pt.y,
                                first_pt.z)
                first = False
            # else:
                # 回到进给高度
                myscreen.addActor(
                    camvtk.Line(p1=(pos.x, pos.y, pos.z), p2=(pos.x, pos.y, feed_height), color=plungeColor))
                myscreen.addActor(
                    camvtk.Line(p1=(pos.x, pos.y, feed_height), p2=(pos.x, pos.y, rapid_height), color=rapidColor))
                myscreen.addActor(
                    camvtk.Line(p1=(pos.x, pos.y, rapid_height), p2=(first_pt.x, first_pt.y, rapid_height),
                                color=XYrapidColor))
                pos = ocl.Point(first_pt.x, first_pt.y, first_pt.z)

                # 回到进给高度
                myscreen.addActor(
                    camvtk.Line(p1=(pos.x, pos.y, rapid_height), p2=(pos.x, pos.y, feed_height), color=rapidColor))
                # 下降到加工高度
                myscreen.addActor(camvtk.Line(p1=(pos.x, pos.y, feed_height), p2=(pos.x, pos.y, pos.z), color=plungeColor))

            # 开始加工
            for p in path[1:]:
                myscreen.addActor(camvtk.Line(p1=(pos.x, pos.y, pos.z), p2=(p.x, p.y, p.z), color=feedColor))
                pos = ocl.Point(p.x, p.y, p.z)
        except Exception as e:
            print("vtk", e)

    # 加工完成、回到安全高度
    myscreen.addActor(camvtk.Line(p1=(pos.x, pos.y, pos.z), p2=(pos.x, pos.y, feed_height), color=plungeColor))
    myscreen.addActor(camvtk.Line(p1=(pos.x, pos.y, feed_height), p2=(pos.x, pos.y, rapid_height), color=rapidColor))
    myscreen.addActor(camvtk.Sphere(center=(pos.x, pos.y, rapid_height), radius=0.1, color=camvtk.red))

    camvtk.drawArrows(myscreen, center=(0, 0, 0))
    camvtk.drawOCLtext(myscreen)
    myscreen.render()
    myscreen.iren.Start()


def vtk_all(stlfile, toolpaths):
    myscreen = camvtk.VTKScreen()
    stl = camvtk.STLSurf(stlfile)
    myscreen.addActor(stl)
    stl.SetSurface()
    stl.SetColor(camvtk.cyan)
    # myscreen.camera.SetPosition(15, 13, 7)
    # myscreen.camera.SetFocalPoint(5, 5, 0)

    rapid_height = 10  # 安全高度
    feed_height = 10  # 进给高度
    rapidColor = camvtk.pink
    XYrapidColor = camvtk.green
    plungeColor = camvtk.red
    feedColor = camvtk.yellow
    pos = ocl.Point(0, 0, 0)
    first = True
    line_points = []
    for path in toolpaths:
        if len(path) == 0:
            continue
        try:
            first_pt = path[0]
            if first:  # 绿色球体表示开始位置
                myscreen.addActor(
                    camvtk.Sphere(center=(first_pt.x, first_pt.y, rapid_height), radius=1, color=camvtk.green))
                pos = ocl.Point(first_pt.x, first_pt.y,
                                first_pt.z)
                first = False
            else:
                # 回到进给高度
                myscreen.addActor(
                    camvtk.Line(p1=(pos.x, pos.y, pos.z), p2=(pos.x, pos.y, feed_height), color=plungeColor))
                myscreen.addActor(
                    camvtk.Line(p1=(pos.x, pos.y, feed_height), p2=(pos.x, pos.y, rapid_height), color=rapidColor))
                myscreen.addActor(
                    camvtk.Line(p1=(pos.x, pos.y, rapid_height), p2=(first_pt.x, first_pt.y, rapid_height),
                                color=XYrapidColor))
                pos = ocl.Point(first_pt.x, first_pt.y, first_pt.z)

                # 回到进给高度
                myscreen.addActor(
                    camvtk.Line(p1=(pos.x, pos.y, rapid_height), p2=(pos.x, pos.y, feed_height), color=rapidColor))
                # 下降到加工高度
                myscreen.addActor(
                    camvtk.Line(p1=(pos.x, pos.y, feed_height), p2=(pos.x, pos.y, pos.z), color=plungeColor))

            # 开始加工
            for p in path[1:]:
                line_points.append(((pos.x, pos.y, pos.z), (p.x, p.y, p.z)))
                pos = ocl.Point(p.x, p.y, p.z)
        except Exception as e:
            print("vtk", e)

    line_actors = camvtk.Lines(line_points)
    myscreen.addActor(line_actors)

    # 加工完成、回到安全高度
    myscreen.addActor(camvtk.Line(p1=(pos.x, pos.y, pos.z), p2=(pos.x, pos.y, feed_height), color=plungeColor))
    myscreen.addActor(camvtk.Line(p1=(pos.x, pos.y, feed_height), p2=(pos.x, pos.y, rapid_height), color=rapidColor))
    myscreen.addActor(camvtk.Sphere(center=(pos.x, pos.y, rapid_height), radius=0.1, color=camvtk.red))

    camvtk.drawArrows(myscreen, center=(0, 0, 0))
    camvtk.drawOCLtext(myscreen)
    myscreen.render()
    myscreen.iren.Start()


def vtk_layer(stlfile, shared_list):
    myscreen = camvtk.VTKScreen()
    stl = camvtk.STLSurf(stlfile)
    myscreen.addActor(stl)
    stl.SetSurface()
    stl.SetColor(camvtk.cyan)
    rapid_height = 50  # 安全高度
    feed_height = 50  # 进给高度
    rapidColor = camvtk.pink
    XYrapidColor = camvtk.yellow
    plungeColor = camvtk.red
    feedColor = camvtk.green
    pos = ocl.Point(0, 0, 0)
    first = True
    line_points = []
    for path in shared_list:
        # try:
        first_pt = path[0]
        if first:  # 绿色球体表示开始位置
            myscreen.addActor(
                camvtk.Sphere(center=(first_pt[0], first_pt[1], rapid_height), radius=1, color=camvtk.green))
            pos = ocl.Point(first_pt[0], first_pt[1],
                            first_pt[2])
            first = False
            # else:
            # 回到进给高度
            myscreen.addActor(
                camvtk.Line(p1=(pos.x, pos.y, pos.z), p2=(pos.x, pos.y, feed_height), color=plungeColor))
            myscreen.addActor(
                camvtk.Line(p1=(pos.x, pos.y, feed_height), p2=(pos.x, pos.y, rapid_height), color=rapidColor))
            myscreen.addActor(
                camvtk.Line(p1=(pos.x, pos.y, rapid_height), p2=(first_pt[0], first_pt[1], rapid_height),
                            color=XYrapidColor))
            pos = ocl.Point(first_pt[0], first_pt[1], first_pt[2])

            # 回到进给高度
            myscreen.addActor(
                camvtk.Line(p1=(pos.x, pos.y, rapid_height), p2=(pos.x, pos.y, feed_height), color=rapidColor))
            # 下降到加工高度
            myscreen.addActor(
                camvtk.Line(p1=(pos.x, pos.y, feed_height), p2=(pos.x, pos.y, pos.z), color=plungeColor))

            # 开始加工
            for p in path[1:]:
                line_points.append(((pos.x, pos.y, pos.z), (p[0], p[1], p[2])))
                pos = ocl.Point(p[0], p[1], p[2])
        for p in path:
            line_points.append(((pos.x, pos.y, pos.z), (p[0], p[1], p[2])))
            pos = ocl.Point(p[0], p[1], p[2])
    # except Exception as e:
    #     print("vtk", e)

    line_actors = camvtk.Lines(line_points)
    myscreen.addActor(line_actors)

    # 加工完成、回到安全高度
    myscreen.addActor(camvtk.Line(p1=(pos.x, pos.y, pos.z), p2=(pos.x, pos.y, feed_height), color=plungeColor))
    myscreen.addActor(camvtk.Line(p1=(pos.x, pos.y, feed_height), p2=(pos.x, pos.y, rapid_height), color=rapidColor))
    myscreen.addActor(camvtk.Sphere(center=(pos.x, pos.y, rapid_height), radius=0.1, color=camvtk.red))

    camvtk.drawArrows(myscreen, center=(0, 0, 0))
    camvtk.drawOCLtext(myscreen)
    myscreen.render()
    myscreen.iren.Start()


def tool_threading(radius, shared_dict):
    # stlfile = "../file/coin_half.stl"
    diameter = 3
    length = 50
    simplify_file = 'simplified_model.stl'
    surface = STLSurfaceSource(simplify_file)
    cutter = ocl.CylCutter(diameter, length)          # 平底刀
    # radius = 1
    paths = path_algorithm.SpiralPath(0, 0, -3, radius, 1)  # 螺旋路径1，从内到外
    (raw_toolpath, n_raw) = adaptive_path_drop_cutter(surface, cutter, paths)
    (toolpaths, n_filtered) = filterCLPaths(raw_toolpath, tolerance=0.001)
    toolpaths_list = []
    print(radius)
    for path in toolpaths:
        if len(path) == 0:
            continue
        for first_pt in path:
            toolpaths_list.append((first_pt.x, first_pt.y, first_pt.z))
            # toolpaths_list.append({"x": first_pt.x, "y": first_pt.y, "z": first_pt.z})
    shared_dict[radius] = toolpaths_list


def tool_layer(radius, num, processes_num, shared_dict):
    # stlfile = "../file/coin_half.stl"
    diameter = 6
    length = 8
    simplify_file = 'simplified_model.stl'
    surface = STLSurfaceSource(simplify_file)
    angle = math.pi / 6
    cutter = ocl.ConeCutter(diameter, angle, length)  # 锥形刀
    # cutter = ocl.CylCutter(diameter, length)          # 平底刀

    min_radius = radius * ((num - 1) / processes_num)
    max_radius = radius * (num / processes_num)
    # print("num1", ((num - 1) / processes_num))
    # print("num2", (num / processes_num))
    # print("min_radius", min_radius)
    # print("max_radius", max_radius)
    paths = path_algorithm.SpiralPathPart(0, 0, -4, min_radius, max_radius, 1, 2)  # 螺旋路径1，从内到外
    (raw_toolpath, n_raw) = adaptive_path_drop_cutter(surface, cutter, paths)
    (toolpaths, n_filtered) = filterCLPaths(raw_toolpath, tolerance=0.001)
    toolpaths_list = []
    # print(num)
    for path in toolpaths:
        if len(path) == 0:
            continue
        for first_pt in path:
            toolpaths_list.append((first_pt.x, first_pt.y, first_pt.z))
            # toolpaths_list.append({"x": first_pt.x, "y": first_pt.y, "z": first_pt.z})
    shared_dict[num] = toolpaths_list
    # print(shared_dict)


def simplify_stl_quadratic(input_file, output_file, target_reduction=0.5):
    # 读取 STL 文件
    reader = vtk.vtkSTLReader()
    reader.SetFileName(input_file)
    reader.Update()

    # 获取输入的 polydata
    polydata = reader.GetOutput()

    # 创建 vtkQuadricDecimation 对象来进行简化
    decimator = vtk.vtkQuadricDecimation()
    decimator.SetInputData(polydata)
    decimator.SetTargetReduction(target_reduction)  # 设置简化目标：0.5表示减少50%面数
    decimator.Update()

    # 获取简化后的 polydata
    simplified_polydata = decimator.GetOutput()

    # 使用 STL writer 将简化后的数据保存为 STL 文件
    writer = vtk.vtkSTLWriter()
    writer.SetFileName(output_file)
    writer.SetInputData(simplified_polydata)
    writer.Write()


if __name__ == "__main__":
    stlfile = "../file/elephant.stl"
    # stlfile = "../file/Throwing.stl"
    # stlfile = "../file/myhand.stl"
    # stlfile = "../file/coin_half.stl"
    # stlfile = "../file/modified_model.stl"
    # stlfile = "../file/left_elephant2.stl"
    ymin = -75
    ymax = 75
    xmin = -50
    xmax = 50
    z_depth = -1
    Ny = 20
    layer = 1
    step_over = 1
    diameter = 3
    length = 8
    # 示例：简化 STL 文件
    simplify_file = 'simplified_model.stl'
    simplify_stl_quadratic(stlfile, simplify_file, target_reduction=0.1)
    surface = STLSurfaceSource(simplify_file)

    # cutter = ocl.BallCutter(diameter, length)             # 球刀
    cutter = ocl.CylCutter(diameter, length)         # 平底刀

    # corner_radius = 0.05
    # cutter = ocl.BullCutter(diameter, 0.2, length)        # 环形刀
    # angle = math.pi/3
    # cutter = ocl.ConeCutter(diameter, angle, length)      # 锥形刀
    # cutter = cutter.offsetCutter(0.4)

    a1 = [(-45.54948043823242, 76.53271484375), (-45.54948043823242, 76.75933074951172), (-45.54948043823242, 76.75933074951172), (-45.54948043823242, 102.84944915771484), (-45.54948043823242, 102.84944915771484), (-45.54871368408203, 102.85861206054688), (-45.54871368408203, 102.85861206054688), (-45.46043014526367, 103.91368865966797), (-45.46043014526367, 103.91368865966797), (-45.45814895629883, 103.92259979248047), (-45.45814895629883, 103.92259979248047), (-45.1955451965332, 104.94830322265625), (-45.1955451965332, 104.94830322265625), (-45.19181442260742, 104.95671081542969), (-45.19181442260742, 104.95671081542969), (-44.76240158081055, 105.9244613647461), (-44.76240158081055, 105.9244613647461), (-44.75732421875, 105.93212890625), (-44.75732421875, 105.93212890625), (-44.172908782958984, 106.81499481201172), (-44.172908782958984, 106.81499481201172), (-44.166629791259766, 106.82171630859375), (-44.166629791259766, 106.82171630859375), (-43.44353103637695, 107.5951156616211), (-43.44353103637695, 107.5951156616211), (-43.331687927246094, 107.6963119506836), (-43.331687927246094, 107.6963119506836), (-30.455495834350586, 119.3470458984375), (-30.455495834350586, 119.3470458984375), (-30.45333480834961, 119.34870147705078), (-30.45333480834961, 119.34870147705078), (-30.204620361328125, 119.53901672363281), (-30.204620361328125, 119.53901672363281), (-30.20221710205078, 119.54029083251953), (-30.20221710205078, 119.54029083251953), (-29.92561149597168, 119.687255859375), (-29.92561149597168, 119.687255859375), (-29.923032760620117, 119.68811798095703), (-29.923032760620117, 119.68811798095703), (-29.626096725463867, 119.78773498535156), (-29.626096725463867, 119.78773498535156), (-29.623411178588867, 119.78816223144531), (-29.623411178588867, 119.78816223144531), (-29.31412696838379, 119.83772277832031), (-29.31412696838379, 119.83772277832031), (-29.3114070892334, 119.83770751953125), (-29.3114070892334, 119.83770751953125), (-28.99822235107422, 119.83587646484375), (-28.99822235107422, 119.83587646484375), (-28.995540618896484, 119.83541107177734), (-28.995540618896484, 119.83541107177734), (-28.686847686767578, 119.78225708007812), (-28.686847686767578, 119.78225708007812), (-28.68427848815918, 119.78136444091797), (-28.68427848815918, 119.78136444091797), (-28.388525009155273, 119.67829895019531), (-28.388525009155273, 119.67829895019531), (-28.386137008666992, 119.67699432373047), (-28.386137008666992, 119.67699432373047), (-28.11124610900879, 119.52682495117188), (-28.11124610900879, 119.52682495117188), (-28.109106063842773, 119.525146484375), (-28.109106063842773, 119.525146484375), (-27.862634658813477, 119.33193969726562), (-27.862634658813477, 119.33193969726562), (-27.860797882080078, 119.3299331665039), (-27.860797882080078, 119.3299331665039), (-27.649250030517578, 119.09890747070312), (-27.649250030517578, 119.09890747070312), (-27.647768020629883, 119.09662628173828), (-27.647768020629883, 119.09662628173828), (-27.477052688598633, 118.83406066894531), (-27.477052688598633, 118.83406066894531), (-27.475963592529297, 118.8315658569336), (-27.475963592529297, 118.8315658569336), (-27.350570678710938, 118.54454040527344), (-27.350570678710938, 118.54454040527344), (-27.349905014038086, 118.54190063476562), (-27.349905014038086, 118.54190063476562), (-27.27332305908203, 118.23820495605469), (-27.27332305908203, 118.23820495605469), (-27.273099899291992, 118.2354965209961), (-27.273099899291992, 118.2354965209961), (-27.24733543395996, 117.92333984375), (-27.24733543395996, 117.4372787475586), (-27.24733543395996, 117.92333984375), (-27.24733543395996, 61.47749328613281), (-27.24733543395996, 117.4372787475586), (-27.24755859375, 61.47478485107422), (-27.24733543395996, 61.47749328613281), (-27.273263931274414, 61.162750244140625), (-27.24755859375, 61.47478485107422), (-27.273929595947266, 61.16011428833008), (-27.273263931274414, 61.162750244140625), (-27.35051155090332, 60.85650634765625), (-27.273929595947266, 61.16011428833008), (-27.351598739624023, 60.8540153503418), (-27.35051155090332, 60.85650634765625), (-27.47687339782715, 60.56707763671875), (-27.351598739624023, 60.8540153503418), (-27.478355407714844, 60.564796447753906), (-27.47687339782715, 60.56707763671875), (-27.649011611938477, 60.302268981933594), (-27.478355407714844, 60.564796447753906), (-27.650848388671875, 60.300262451171875), (-27.649011611938477, 60.302268981933594), (-27.86221694946289, 60.06927490234375), (-27.650848388671875, 60.300262451171875), (-27.864356994628906, 60.067596435546875), (-27.86221694946289, 60.06927490234375), (-28.110708236694336, 59.874366760253906), (-27.864356994628906, 60.067596435546875), (-28.113094329833984, 59.87306213378906), (-28.110708236694336, 59.874366760253906), (-28.3878116607666, 59.72285461425781), (-28.113094329833984, 59.87306213378906), (-28.390378952026367, 59.72195816040039), (-28.3878116607666, 59.72285461425781), (-28.686012268066406, 59.618797302246094), (-28.390378952026367, 59.72195816040039), (-28.688692092895508, 59.61833572387695), (-28.686012268066406, 59.618797302246094), (-28.997209548950195, 59.56504821777344), (-28.688692092895508, 59.61833572387695), (-28.999929428100586, 59.56502914428711), (-28.997209548950195, 59.56504821777344), (-29.313053131103516, 59.56304168701172), (-28.999929428100586, 59.56502914428711), (-29.315738677978516, 59.56346893310547), (-29.313053131103516, 59.56304168701172), (-29.62490463256836, 59.612823486328125), (-29.315738677978516, 59.56346893310547), (-29.627483367919922, 59.613685607910156), (-29.62490463256836, 59.612823486328125), (-29.92441749572754, 59.71308135986328), (-29.627483367919922, 59.613685607910156), (-29.926820755004883, 59.71435546875), (-29.92441749572754, 59.71308135986328), (-30.203428268432617, 59.861061096191406), (-29.926820755004883, 59.71435546875), (-30.205589294433594, 59.86271286010742), (-30.203428268432617, 59.861061096191406), (-30.454423904418945, 60.05278015136719), (-30.205589294433594, 59.86271286010742), (-30.566242218017578, 60.1537971496582), (-30.454423904418945, 60.05278015136719), (-43.43977355957031, 71.78366088867188), (-30.566242218017578, 60.1537971496582), (-43.44606399536133, 71.7903823852539), (-43.43977355957031, 71.78366088867188), (-44.170406341552734, 72.5639877319336), (-43.44606399536133, 71.7903823852539), (-44.17549133300781, 72.57166290283203), (-44.170406341552734, 72.5639877319336), (-44.76091003417969, 73.45503234863281), (-44.17549133300781, 72.57166290283203), (-44.7646484375, 73.46344757080078), (-44.76091003417969, 73.45503234863281), (-45.19489288330078, 74.43195343017578), (-44.7646484375, 73.46344757080078), (-45.19717788696289, 74.44087219238281), (-45.19489288330078, 74.43195343017578), (-45.46025085449219, 75.46747589111328), (-45.19717788696289, 74.44087219238281), (-45.46101760864258, 75.47664642333984), (-45.46025085449219, 75.46747589111328), (-45.54948043823242, 76.53271484375), (-45.46101760864258, 75.47664642333984)]
    ef = [(34.799072265625, 31.02429962158203), (34.42256164550781, 31.02429962158203), (34.42256164550781, 31.02429962158203), (16.272090911865234, 31.02429962158203), (16.272090911865234, 31.02429962158203), (16.256864547729492, 31.02557373046875), (16.256864547729492, 31.02557373046875), (15.522867202758789, 31.086990356445312), (15.522867202758789, 31.086990356445312), (15.508065223693848, 31.09078025817871), (15.508065223693848, 31.09078025817871), (14.794498443603516, 31.273469924926758), (14.794498443603516, 31.273469924926758), (14.780532836914062, 31.279666900634766), (14.780532836914062, 31.279666900634766), (14.107282638549805, 31.57840347290039), (14.107282638549805, 31.57840347290039), (14.094541549682617, 31.586837768554688), (14.094541549682617, 31.586837768554688), (13.480347633361816, 31.993406295776367), (13.480347633361816, 31.993406295776367), (13.469186782836914, 32.003841400146484), (13.469186782836914, 32.003841400146484), (12.93114185333252, 32.50688934326172), (12.93114185333252, 32.50688934326172), (12.763008117675781, 32.69270706176758), (12.763008117675781, 32.69270706176758), (4.657783508300781, 41.65046691894531), (4.657783508300781, 41.65046691894531), (4.655036926269531, 41.654056549072266), (4.655036926269531, 41.654056549072266), (4.5226359367370605, 41.82707977294922), (4.5226359367370605, 41.82707977294922), (4.520514965057373, 41.83106994628906), (4.520514965057373, 41.83106994628906), (4.418275356292725, 42.023502349853516), (4.418275356292725, 42.023502349853516), (4.416837692260742, 42.02778625488281), (4.416837692260742, 42.02778625488281), (4.347537994384766, 42.2343635559082), (4.347537994384766, 42.2343635559082), (4.346822738647461, 42.238826751708984), (4.346822738647461, 42.238826751708984), (4.312346935272217, 42.45398712158203), (4.312346935272217, 42.45398712158203), (4.312373161315918, 42.4585075378418), (4.312373161315918, 42.4585075378418), (4.3136467933654785, 42.67638397216797), (4.3136467933654785, 42.67638397216797), (4.314414024353027, 42.68083953857422), (4.314414024353027, 42.68083953857422), (4.3513946533203125, 42.895591735839844), (4.3513946533203125, 42.895591735839844), (4.352881908416748, 42.89986038208008), (4.352881908416748, 42.89986038208008), (4.424581050872803, 43.105613708496094), (4.424581050872803, 43.105613708496094), (4.426748275756836, 43.109580993652344), (4.426748275756836, 43.109580993652344), (4.531219005584717, 43.30081558227539), (4.531219005584717, 43.30081558227539), (4.5340070724487305, 43.30437088012695), (4.5340070724487305, 43.30437088012695), (4.668417930603027, 43.47583770751953), (4.668417930603027, 43.47583770751953), (4.671751976013184, 43.47888946533203), (4.671751976013184, 43.47888946533203), (4.832472801208496, 43.626060485839844), (4.832472801208496, 43.626060485839844), (4.836261749267578, 43.62852478027344), (4.836261749267578, 43.62852478027344), (5.018924713134766, 43.74728775024414), (5.018924713134766, 43.74728775024414), (5.023066997528076, 43.74909591674805), (5.023066997528076, 43.74909591674805), (5.222747325897217, 43.836334228515625), (5.222747325897217, 43.836334228515625), (5.227129936218262, 43.837440490722656), (5.227129936218262, 43.837440490722656), (5.4384074211120605, 43.890716552734375), (5.4384074211120605, 43.890716552734375), (5.4429121017456055, 43.89108657836914), (5.4429121017456055, 43.89108657836914), (5.660072326660156, 43.90901184082031), (6.46763801574707, 43.90901184082031), (5.660072326660156, 43.90901184082031), (45.39794921875, 43.90901184082031), (6.46763801574707, 43.90901184082031), (45.40245056152344, 43.90864181518555), (45.39794921875, 43.90901184082031), (45.61952590942383, 43.89075469970703), (45.40245056152344, 43.90864181518555), (45.62390899658203, 43.8896484375), (45.61952590942383, 43.89075469970703), (45.83512496948242, 43.83637237548828), (45.62390899658203, 43.8896484375), (45.839263916015625, 43.834564208984375), (45.83512496948242, 43.83637237548828), (46.03887939453125, 43.747413635253906), (45.839263916015625, 43.834564208984375), (46.042667388916016, 43.74494934082031), (46.03887939453125, 43.747413635253906), (46.22530746459961, 43.62622833251953), (46.042667388916016, 43.74494934082031), (46.228641510009766, 43.62317657470703), (46.22530746459961, 43.62622833251953), (46.38933563232422, 43.47613525390625), (46.228641510009766, 43.62317657470703), (46.39212417602539, 43.47257995605469), (46.38933563232422, 43.47613525390625), (46.52655029296875, 43.30119705200195), (46.39212417602539, 43.47257995605469), (46.528717041015625, 43.29723358154297), (46.52655029296875, 43.30119705200195), (46.63321304321289, 43.10611343383789), (46.528717041015625, 43.29723358154297), (46.634700775146484, 43.10184860229492), (46.63321304321289, 43.10611343383789), (46.70647048950195, 42.896183013916016), (46.634700775146484, 43.10184860229492), (46.70724105834961, 42.89173126220703), (46.70647048950195, 42.896183013916016), (46.74430847167969, 42.67709732055664), (46.70724105834961, 42.89173126220703), (46.74433898925781, 42.672576904296875), (46.74430847167969, 42.67709732055664), (46.745723724365234, 42.45474624633789), (46.74433898925781, 42.672576904296875), (46.74501037597656, 42.45028305053711), (46.745723724365234, 42.45474624633789), (46.71067428588867, 42.23520278930664), (46.74501037597656, 42.45028305053711), (46.7092399597168, 42.230918884277344), (46.71067428588867, 42.23520278930664), (46.64009475708008, 42.02434539794922), (46.7092399597168, 42.230918884277344), (46.637977600097656, 42.020355224609375), (46.64009475708008, 42.02434539794922), (46.53591537475586, 41.827919006347656), (46.637977600097656, 42.020355224609375), (46.533172607421875, 41.8243293762207), (46.53591537475586, 41.827919006347656), (46.40094757080078, 41.65121841430664), (46.533172607421875, 41.8243293762207), (46.233116149902344, 41.46543884277344), (46.40094757080078, 41.65121841430664), (38.14240646362305, 32.5095329284668), (46.233116149902344, 41.46543884277344), (38.13124084472656, 32.499080657958984), (38.14240646362305, 32.5095329284668), (37.593055725097656, 31.995168685913086), (38.13124084472656, 32.499080657958984), (37.58030700683594, 31.98672103881836), (37.593055725097656, 31.995168685913086), (36.96575927734375, 31.579452514648438), (37.58030700683594, 31.98672103881836), (36.9517822265625, 31.573244094848633), (36.96575927734375, 31.579452514648438), (36.27800750732422, 31.273929595947266), (36.9517822265625, 31.573244094848633), (36.26319122314453, 31.27013397216797), (36.27800750732422, 31.273929595947266), (35.54899978637695, 31.08711814880371), (36.26319122314453, 31.27013397216797), (35.53376007080078, 31.08584213256836), (35.54899978637695, 31.08711814880371), (34.799072265625, 31.02429962158203), (35.53376007080078, 31.08584213256836)]
    le = [(4.312347412109375, 25.45398712158203), (4.347537994384766, 25.234363555908203), (4.312347412109375, 25.45398712158203), (4.347537994384766, 25.234363555908203), (4.347537994384766, 25.234363555908203), (4.347537994384766, 25.234363555908203), (4.347537994384766, 25.234363555908203), (4.347537994384766, 25.234363555908203), (4.41827392578125, 25.023502349853516), (4.41827392578125, 25.023502349853516), (4.41827392578125, 25.023502349853516), (4.41827392578125, 25.023502349853516), (4.41827392578125, 25.023502349853516), (4.41827392578125, 25.023502349853516), (4.522636413574219, 24.82707977294922), (4.522636413574219, 24.82707977294922), (4.522636413574219, 24.82707977294922), (4.522636413574219, 24.82707977294922), (4.522636413574219, 24.82707977294922), (4.522636413574219, 24.82707977294922), (4.657783508300781, 24.650466918945312), (4.657783508300781, 24.650466918945312), (4.657783508300781, 24.650466918945312), (4.657783508300781, 24.650466918945312), (4.657783508300781, 24.650466918945312), (4.657783508300781, 24.650466918945312), (12.931140899658203, 15.506889343261719), (12.931140899658203, 15.506889343261719), (12.931140899658203, 15.506889343261719), (12.931140899658203, 15.506889343261719), (12.931140899658203, 15.506889343261719), (12.931140899658203, 15.506889343261719), (13.4803466796875, 14.993406295776367), (13.4803466796875, 14.993406295776367), (13.4803466796875, 14.993406295776367), (13.4803466796875, 14.993406295776367), (13.4803466796875, 14.993406295776367), (13.4803466796875, 14.993406295776367), (14.107284545898438, 14.57840347290039), (14.107284545898438, 14.57840347290039), (14.107284545898438, 14.57840347290039), (14.107284545898438, 14.57840347290039), (14.107284545898438, 14.57840347290039), (14.107284545898438, 14.57840347290039), (14.794498443603516, 14.273469924926758), (14.794498443603516, 14.273469924926758), (14.794498443603516, 14.273469924926758), (14.794498443603516, 14.273469924926758), (14.794498443603516, 14.273469924926758), (14.794498443603516, 14.273469924926758), (15.522865295410156, 14.086990356445312), (15.522865295410156, 14.086990356445312), (15.522865295410156, 14.086990356445312), (15.522865295410156, 14.086990356445312), (15.522865295410156, 14.086990356445312), (15.522865295410156, 14.086990356445312), (16.272090911865234, 14.024299621582031), (16.272090911865234, 14.024299621582031), (16.272090911865234, 14.024299621582031), (16.272090911865234, 14.024299621582031), (16.272090911865234, 14.024299621582031), (16.272090911865234, 14.024299621582031), (34.799072265625, 14.024299621582031), (34.799072265625, 14.024299621582031), (34.799072265625, 14.024299621582031), (34.799072265625, 14.024299621582031), (34.799072265625, 14.024299621582031), (34.799072265625, 14.024299621582031), (35.54899978637695, 14.087118148803711), (35.54899978637695, 14.087118148803711), (35.54899978637695, 14.087118148803711), (35.54899978637695, 14.087118148803711), (35.54899978637695, 14.087118148803711), (35.54899978637695, 14.087118148803711), (36.27800750732422, 14.273929595947266), (36.27800750732422, 14.273929595947266), (36.27800750732422, 14.273929595947266), (36.27800750732422, 14.273929595947266), (36.27800750732422, 14.273929595947266), (36.27800750732422, 14.273929595947266), (36.96575927734375, 14.579452514648438), (36.96575927734375, 14.579452514648438), (36.96575927734375, 14.579452514648438), (36.96575927734375, 14.579452514648438), (36.96575927734375, 14.579452514648438), (36.96575927734375, 14.579452514648438), (37.593055725097656, 14.995168685913086), (37.593055725097656, 14.995168685913086), (37.593055725097656, 14.995168685913086), (37.593055725097656, 14.995168685913086), (37.593055725097656, 14.995168685913086), (37.593055725097656, 14.995168685913086), (38.14240646362305, 15.509532928466797), (38.14240646362305, 15.509532928466797), (38.14240646362305, 15.509532928466797), (38.14240646362305, 15.509532928466797), (38.14240646362305, 15.509532928466797), (38.14240646362305, 15.509532928466797), (46.40094757080078, 24.65121841430664), (46.40094757080078, 24.65121841430664), (46.40094757080078, 24.65121841430664), (46.40094757080078, 24.65121841430664), (46.40094757080078, 24.65121841430664), (46.40094757080078, 24.65121841430664), (46.53591537475586, 24.827919006347656), (46.53591537475586, 24.827919006347656), (46.53591537475586, 24.827919006347656), (46.53591537475586, 24.827919006347656), (46.53591537475586, 24.827919006347656), (46.53591537475586, 24.827919006347656), (46.64009475708008, 25.02434539794922), (46.64009475708008, 25.02434539794922), (46.64009475708008, 25.02434539794922), (46.64009475708008, 25.02434539794922), (46.64009475708008, 25.02434539794922), (46.64009475708008, 25.02434539794922), (46.71067428588867, 25.23520278930664), (46.71067428588867, 25.23520278930664), (46.71067428588867, 25.23520278930664), (46.71067428588867, 25.23520278930664), (46.71067428588867, 25.23520278930664), (46.71067428588867, 25.23520278930664), (46.745723724365234, 25.45474624633789), (46.745723724365234, 25.45474624633789), (46.745723724365234, 25.45474624633789), (46.745723724365234, 25.45474624633789), (46.74430847167969, 25.67709732055664), (46.745723724365234, 25.45474624633789), (46.74430847167969, 25.67709732055664), (46.745723724365234, 25.45474624633789), (46.74430847167969, 25.67709732055664), (46.74430847167969, 25.67709732055664), (46.70647048950195, 25.896183013916016), (46.70647048950195, 25.896183013916016), (46.74430847167969, 25.67709732055664), (46.74430847167969, 25.67709732055664), (46.70647048950195, 25.896183013916016), (46.70647048950195, 25.896183013916016), (46.63321304321289, 26.10611343383789), (46.63321304321289, 26.10611343383789), (46.70647048950195, 25.896183013916016), (46.70647048950195, 25.896183013916016), (46.63321304321289, 26.10611343383789), (46.63321304321289, 26.10611343383789), (46.52655029296875, 26.301197052001953), (46.52655029296875, 26.301197052001953), (46.63321304321289, 26.10611343383789), (46.63321304321289, 26.10611343383789), (46.52655029296875, 26.301197052001953), (46.52655029296875, 26.301197052001953), (46.38933563232422, 26.47613525390625), (46.38933563232422, 26.47613525390625), (46.52655029296875, 26.301197052001953), (46.52655029296875, 26.301197052001953), (46.38933563232422, 26.47613525390625), (46.38933563232422, 26.47613525390625), (46.22530746459961, 26.62622833251953), (46.22530746459961, 26.62622833251953), (46.38933563232422, 26.47613525390625), (46.38933563232422, 26.47613525390625), (46.22530746459961, 26.62622833251953), (46.22530746459961, 26.62622833251953), (46.03887939453125, 26.747413635253906), (46.03887939453125, 26.747413635253906), (46.22530746459961, 26.62622833251953), (46.22530746459961, 26.62622833251953), (46.03887939453125, 26.747413635253906), (46.03887939453125, 26.747413635253906), (45.835121154785156, 26.83637237548828), (45.835121154785156, 26.83637237548828), (46.03887939453125, 26.747413635253906), (46.03887939453125, 26.747413635253906), (45.835121154785156, 26.83637237548828), (45.835121154785156, 26.83637237548828), (45.61952590942383, 26.89075469970703), (45.61952590942383, 26.89075469970703), (45.835121154785156, 26.83637237548828), (45.835121154785156, 26.83637237548828), (45.61952590942383, 26.89075469970703), (45.61952590942383, 26.89075469970703), (45.39794921875, 26.909011840820312), (45.39794921875, 26.909011840820312), (45.61952590942383, 26.89075469970703), (45.61952590942383, 26.89075469970703), (45.39794921875, 26.909011840820312), (45.39794921875, 26.909011840820312), (5.660072326660156, 26.909011840820312), (5.660072326660156, 26.909011840820312), (45.39794921875, 26.909011840820312), (45.39794921875, 26.909011840820312), (5.660072326660156, 26.909011840820312), (5.660072326660156, 26.909011840820312), (5.438407897949219, 26.890716552734375), (5.438407897949219, 26.890716552734375), (5.660072326660156, 26.909011840820312), (5.660072326660156, 26.909011840820312), (5.438407897949219, 26.890716552734375), (5.438407897949219, 26.890716552734375), (5.222747802734375, 26.836334228515625), (5.222747802734375, 26.836334228515625), (5.438407897949219, 26.890716552734375), (5.438407897949219, 26.890716552734375), (5.222747802734375, 26.836334228515625), (5.222747802734375, 26.836334228515625), (5.018924713134766, 26.74728775024414), (5.018924713134766, 26.74728775024414), (5.222747802734375, 26.836334228515625), (5.222747802734375, 26.836334228515625), (5.018924713134766, 26.74728775024414), (5.018924713134766, 26.74728775024414), (4.8324737548828125, 26.626060485839844), (4.8324737548828125, 26.626060485839844), (5.018924713134766, 26.74728775024414), (5.018924713134766, 26.74728775024414), (4.8324737548828125, 26.626060485839844), (4.8324737548828125, 26.626060485839844), (4.668418884277344, 26.47583770751953), (4.668418884277344, 26.47583770751953), (4.8324737548828125, 26.626060485839844), (4.8324737548828125, 26.626060485839844), (4.668418884277344, 26.47583770751953), (4.668418884277344, 26.47583770751953), (4.531219482421875, 26.30081558227539), (4.531219482421875, 26.30081558227539), (4.668418884277344, 26.47583770751953), (4.668418884277344, 26.47583770751953), (4.531219482421875, 26.30081558227539), (4.531219482421875, 26.30081558227539), (4.424579620361328, 26.105613708496094), (4.424579620361328, 26.105613708496094), (4.531219482421875, 26.30081558227539), (4.531219482421875, 26.30081558227539), (4.424579620361328, 26.105613708496094), (4.424579620361328, 26.105613708496094), (4.3513946533203125, 25.895591735839844), (4.3513946533203125, 25.895591735839844), (4.424579620361328, 26.105613708496094), (4.424579620361328, 26.105613708496094), (4.3513946533203125, 25.895591735839844), (4.3513946533203125, 25.895591735839844), (4.313648223876953, 25.67638397216797), (4.313648223876953, 25.67638397216797), (4.3513946533203125, 25.895591735839844), (4.3513946533203125, 25.895591735839844), (4.313648223876953, 25.67638397216797), (4.313648223876953, 25.67638397216797), (4.312347412109375, 25.45398712158203), (4.312347412109375, 25.45398712158203), (4.313648223876953, 25.67638397216797), (4.313648223876953, 25.67638397216797), (4.312347412109375, 25.45398712158203), (4.312347412109375, 25.45398712158203)]
    t = [(6.941155910491943, 31.9797420501709), (7.27384090423584, 32.6360969543457), (7.27384090423584, 32.6360969543457), (7.558307647705078, 33.05720138549805), (7.558307647705078, 33.05720138549805), (7.781889915466309, 33.38817596435547), (7.781889915466309, 33.38817596435547), (8.12523078918457, 33.80442810058594), (8.12523078918457, 33.80442810058594), (8.359403610229492, 34.08832931518555), (8.359403610229492, 34.08832931518555), (8.775750160217285, 34.504756927490234), (6.941155910491943, 31.9797420501709), (6.611575126647949, 31.329513549804688), (6.611575126647949, 31.329513549804688), (6.3837714195251465, 30.629806518554688), (6.3837714195251465, 30.629806518554688), (6.158093452453613, 29.936628341674805), (6.158093452453613, 29.936628341674805), (6.040590286254883, 29.210216522216797), (6.040590286254883, 29.210216522216797), (5.924183368682861, 28.490581512451172), (5.924183368682861, 28.490581512451172), (5.919775009155273, 27.75473976135254), (5.919775009155273, 27.75473976135254), (5.915408134460449, 27.02576446533203), (5.915408134460449, 27.02576446533203), (6.024200916290283, 26.297996520996094), (6.024200916290283, 26.297996520996094), (6.1319780349731445, 25.57701873779297), (6.1319780349731445, 25.57701873779297), (6.351382732391357, 24.8746337890625), (6.351382732391357, 24.8746337890625), (6.568739891052246, 24.178802490234375), (6.568739891052246, 24.178802490234375), (6.893538475036621, 23.518508911132812), (6.893538475036621, 23.518508911132812), (7.215305805206299, 22.864376068115234), (7.215305805206299, 22.864376068115234), (7.637772560119629, 22.261877059936523), (7.637772560119629, 22.261877059936523), (8.056297302246094, 21.665000915527344), (8.056297302246094, 21.665000915527344), (8.566384315490723, 21.13463020324707), (8.566384315490723, 21.13463020324707), (9.071710586547852, 20.609207153320312), (9.071710586547852, 20.609207153320312), (9.657283782958984, 20.163576126098633), (9.657283782958984, 20.163576126098633), (10.23739242553711, 19.722105026245117), (10.23739242553711, 19.722105026245117), (10.88452434539795, 19.371816635131836), (10.88452434539795, 19.371816635131836), (11.525618553161621, 19.024795532226562), (11.525618553161621, 19.024795532226562), (12.218917846679688, 18.778179168701172), (12.218917846679688, 18.778179168701172), (12.905747413635254, 18.533863067626953), (12.905747413635254, 18.533863067626953), (13.628722190856934, 18.396785736083984), (13.628722190856934, 18.396785736083984), (14.344949722290039, 18.260988235473633), (14.344949722290039, 18.260988235473633), (15.080404281616211, 18.236711502075195), (15.080404281616211, 18.236711502075195), (15.808996200561523, 18.21265983581543), (15.808996200561523, 18.21265983581543), (16.53943634033203, 18.301759719848633), (16.53943634033203, 18.301759719848633), (17.2630615234375, 18.39002799987793), (17.2630615234375, 18.39002799987793), (17.971115112304688, 18.59038543701172), (17.971115112304688, 18.59038543701172), (18.672561645507812, 18.78887176513672), (18.672561645507812, 18.78887176513672), (19.341386795043945, 19.095720291137695), (19.341386795043945, 19.095720291137695), (20.003971099853516, 19.39970588684082), (20.003971099853516, 19.39970588684082), (20.617658615112305, 19.805747985839844), (20.617658615112305, 19.805747985839844), (21.225618362426758, 20.20800018310547), (21.225618362426758, 20.20800018310547), (21.769573211669922, 20.70357894897461), (21.769573211669922, 20.70357894897461), (22.30845069885254, 21.19453239440918), (22.30845069885254, 21.19453239440918), (22.769731521606445, 21.76785659790039), (22.769731521606445, 21.76785659790039), (23.226707458496094, 22.335832595825195), (23.226707458496094, 22.335832595825195), (23.50798797607422, 22.79456901550293), (23.50798797607422, 22.79456901550293), (23.725860595703125, 23.149892807006836), (23.725860595703125, 23.149892807006836), (23.968978881835938, 23.65387535095215), (23.968978881835938, 23.65387535095215), (24.140750885009766, 24.009960174560547), (24.140750885009766, 24.009960174560547), (24.355880737304688, 24.60135841369629), (24.684864044189453, 25.765905380249023), (24.70186424255371, 25.83296012878418), (24.46718406677246, 24.907339096069336), (24.684864044189453, 25.765905380249023), (24.355880737304688, 24.60135841369629), (24.46718406677246, 24.907339096069336), (9.671338081359863, 35.28322219848633), (9.701143264770508, 35.30781555175781), (9.001108169555664, 34.730159759521484), (9.671338081359863, 35.28322219848633), (8.775750160217285, 34.504756927490234), (9.001108169555664, 34.730159759521484), (31.814918518066406, 8.767131805419922), (31.073665618896484, 8.653548240661621), (32.34941482543945, 8.779394149780273), (31.814918518066406, 8.767131805419922), (32.77253341674805, 8.789100646972656), (32.34941482543945, 8.779394149780273), (33.338775634765625, 8.74487018585205), (32.77253341674805, 8.789100646972656), (33.72749328613281, 8.714506149291992), (33.338775634765625, 8.74487018585205), (34.338035583496094, 8.604133605957031), (33.72749328613281, 8.714506149291992), (31.073665618896484, 8.653548240661621), (30.339330673217773, 8.541025161743164), (30.339330673217773, 8.541025161743164), (29.625030517578125, 8.312702178955078), (29.625030517578125, 8.312702178955078), (28.917394638061523, 8.086509704589844), (28.917394638061523, 8.086509704589844), (28.247692108154297, 7.749087333679199), (28.247692108154297, 7.749087333679199), (27.584238052368164, 7.414813995361328), (27.584238052368164, 7.414813995361328), (26.975675582885742, 6.976627349853516), (26.975675582885742, 6.976627349853516), (26.372791290283203, 6.542530059814453), (26.372791290283203, 6.542530059814453), (25.840402603149414, 6.014403820037842), (25.840402603149414, 6.014403820037842), (25.31298065185547, 5.491206169128418), (25.31298065185547, 5.491206169128418), (24.869915008544922, 4.886185646057129), (24.869915008544922, 4.886185646057129), (24.430984497070312, 4.286810874938965), (24.430984497070312, 4.286810874938965), (24.08818817138672, 3.619842529296875), (24.08818817138672, 3.619842529296875), (23.74859046936035, 2.9590978622436523), (23.74859046936035, 2.9590978622436523), (23.5145320892334, 2.2466564178466797), (23.5145320892334, 2.2466564178466797), (23.28265953063965, 1.540863037109375), (23.28265953063965, 1.540863037109375), (23.16312026977539, 0.8005478978157043), (23.16312026977539, 0.8005478978157043), (23.044694900512695, 0.06714093685150146), (23.044694900512695, 0.06714093685150146), (23.042627334594727, -0.6827604174613953), (23.042627334594727, -0.6827604174613953), (23.040578842163086, -1.4256641864776611), (23.040578842163086, -1.4256641864776611), (23.156034469604492, -2.1666266918182373), (23.156034469604492, -2.1666266918182373), (23.270414352416992, -2.900674819946289), (23.270414352416992, -2.900674819946289), (23.500539779663086, -3.614396333694458), (23.500539779663086, -3.614396333694458), (23.728519439697266, -4.321457862854004), (23.728519439697266, -4.321457862854004), (24.0676326751709, -4.990306377410889), (24.0676326751709, -4.990306377410889), (24.403581619262695, -5.652913570404053), (24.403581619262695, -5.652913570404053), (24.843303680419922, -6.2603678703308105), (24.843303680419922, -6.2603678703308105), (25.27892303466797, -6.86215353012085), (25.27892303466797, -6.86215353012085), (25.808391571044922, -7.39320707321167), (25.808391571044922, -7.39320707321167), (26.33292007446289, -7.919304847717285), (26.33292007446289, -7.919304847717285), (26.939058303833008, -8.36083984375), (26.939058303833008, -8.36083984375), (27.539539337158203, -8.79825496673584), (27.539539337158203, -8.79825496673584), (28.207372665405273, -9.139365196228027), (28.207372665405273, -9.139365196228027), (28.868972778320312, -9.47729206085205), (28.868972778320312, -9.47729206085205), (29.582002639770508, -9.709549903869629), (29.582002639770508, -9.709549903869629), (30.288379669189453, -9.939640045166016), (30.288379669189453, -9.939640045166016), (31.028995513916016, -10.0573091506958), (31.028995513916016, -10.0573091506958), (31.762699127197266, -10.173880577087402), (31.762699127197266, -10.173880577087402), (32.30357360839844, -10.189196586608887), (32.30357360839844, -10.189196586608887), (32.72285842895508, -10.201068878173828), (32.72285842895508, -10.201068878173828), (33.28406524658203, -10.160104751586914), (33.28406524658203, -10.160104751586914), (33.68085479736328, -10.131141662597656), (33.68085479736328, -10.131141662597656), (34.3041877746582, -10.021551132202148), (35.48444747924805, -9.722660064697266), (35.55128479003906, -9.703786849975586), (34.626888275146484, -9.964815139770508), (35.48444747924805, -9.722660064697266), (34.3041877746582, -10.021551132202148), (34.626888275146484, -9.964815139770508), (35.59071350097656, 8.27963638305664), (35.55220031738281, 8.29069995880127), (35.55220031738281, 8.29069995880127), (34.670082092285156, 8.544107437133789), (34.670082092285156, 8.544107437133789), (34.338035583496094, 8.604133605957031), (24.471031188964844, -24.431272506713867), (24.04637336730957, -23.849428176879883), (24.72509002685547, -24.890335083007812), (24.471031188964844, -24.431272506713867), (24.925668716430664, -25.25275993347168), (24.72509002685547, -24.890335083007812), (25.146053314208984, -25.76460075378418), (24.925668716430664, -25.25275993347168), (25.296977996826172, -26.11511993408203), (25.146053314208984, -25.76460075378418), (25.481277465820312, -26.6950740814209), (25.296977996826172, -26.11511993408203), (24.04637336730957, -23.849428176879883), (23.62567710876465, -23.273014068603516), (23.62567710876465, -23.273014068603516), (23.118267059326172, -22.761730194091797), (23.118267059326172, -22.761730194091797), (22.61559295654297, -22.255216598510742), (22.61559295654297, -22.255216598510742), (22.036996841430664, -21.826143264770508), (22.036996841430664, -21.826143264770508), (21.46379852294922, -21.40107536315918), (21.46379852294922, -21.40107536315918), (20.82720184326172, -21.063995361328125), (20.82720184326172, -21.063995361328125), (20.19654655456543, -20.73006248474121), (20.19654655456543, -20.73006248474121), (19.516460418701172, -20.492658615112305), (19.516460418701172, -20.492658615112305), (18.842721939086914, -20.257469177246094), (18.842721939086914, -20.257469177246094), (18.134647369384766, -20.125150680541992), (18.134647369384766, -20.125150680541992), (17.433181762695312, -19.99406623840332), (17.433181762695312, -19.99406623840332), (16.7132568359375, -19.969850540161133), (16.7132568359375, -19.969850540161133), (16.000051498413086, -19.94586181640625), (16.000051498413086, -19.94586181640625), (15.284686088562012, -20.03030014038086), (15.284686088562012, -20.03030014038086), (14.575996398925781, -20.113950729370117), (14.575996398925781, -20.113950729370117), (13.881495475769043, -20.305118560791016), (13.881495475769043, -20.305118560791016), (13.193475723266602, -20.494503021240234), (13.193475723266602, -20.494503021240234), (12.5418062210083, -20.78530502319336), (12.5418062210083, -20.78530502319336), (11.88399887084961, -21.078845977783203), (11.88399887084961, -21.078845977783203), (11.277877807617188, -21.468069076538086), (11.277877807617188, -21.468069076538086), (10.677412033081055, -21.85365867614746), (10.677412033081055, -21.85365867614746), (10.13679313659668, -22.32969093322754), (10.13679313659668, -22.32969093322754), (9.601218223571777, -22.80128288269043), (9.601218223571777, -22.80128288269043), (9.138422012329102, -23.353275299072266), (9.138422012329102, -23.353275299072266), (8.67994499206543, -23.900117874145508), (8.67994499206543, -23.900117874145508), (8.305521011352539, -24.515491485595703), (8.305521011352539, -24.515491485595703), (7.934591293334961, -25.1251220703125), (7.934591293334961, -25.1251220703125), (7.657073497772217, -25.78984832763672), (7.657073497772217, -25.78984832763672), (7.382144927978516, -26.4483699798584), (7.382144927978516, -26.4483699798584), (7.207858085632324, -27.14729881286621), (7.207858085632324, -27.14729881286621), (7.0351972579956055, -27.839706420898438), (7.0351972579956055, -27.839706420898438), (6.968114376068115, -28.556907653808594), (6.968114376068115, -28.556907653808594), (6.901657581329346, -29.26741600036621), (6.901657581329346, -29.26741600036621), (6.943306922912598, -29.986541748046875), (6.943306922912598, -29.986541748046875), (6.984567642211914, -30.698957443237305), (6.984567642211914, -30.698957443237305), (7.134000778198242, -31.403615951538086), (7.134000778198242, -31.403615951538086), (7.282039642333984, -32.10169982910156), (7.282039642333984, -32.10169982910156), (7.5358500480651855, -32.77583694458008), (7.5358500480651855, -32.77583694458008), (7.78729248046875, -33.44367980957031), (7.78729248046875, -33.44367980957031), (8.039735794067383, -33.921382904052734), (8.039735794067383, -33.921382904052734), (8.23538875579834, -34.29161834716797), (8.23538875579834, -34.29161834716797), (8.546669006347656, -34.75938415527344), (8.546669006347656, -34.75938415527344), (8.766711235046387, -35.09004592895508), (8.766711235046387, -35.09004592895508), (9.168085098266602, -35.578163146972656), (10.007328033447266, -36.457523345947266), (10.056571960449219, -36.50639343261719), (9.375843048095703, -35.8308219909668), (10.007328033447266, -36.457523345947266), (9.168085098266602, -35.578163146972656), (9.375843048095703, -35.8308219909668), (25.775951385498047, -27.928438186645508), (25.76775550842285, -27.889760971069336), (25.76775550842285, -27.889760971069336), (25.581331253051758, -27.00992774963379), (25.581331253051758, -27.00992774963379), (25.481277465820312, -26.6950740814209), (-25.10712242126465, 21.689424514770508), (-25.57111167907715, 22.28812026977539), (-25.57111167907715, 22.28812026977539), (-25.83867645263672, 22.74484634399414), (-25.83867645263672, 22.74484634399414), (-26.05018424987793, 23.10588264465332), (-26.05018424987793, 23.10588264465332), (-26.284635543823242, 23.616939544677734), (-26.284635543823242, 23.616939544677734), (-26.445375442504883, 23.96731948852539), (-26.445375442504883, 23.96731948852539), (-26.644533157348633, 24.548221588134766), (-24.647462844848633, 21.096317291259766), (-25.10712242126465, 21.689424514770508), (-24.09457778930664, 20.57859230041504), (-24.647462844848633, 21.096317291259766), (-23.546852111816406, 20.065696716308594), (-24.09457778930664, 20.57859230041504), (-22.919004440307617, 19.64198875427246), (-23.546852111816406, 20.065696716308594), (-22.297016143798828, 19.22223472595215), (-22.919004440307617, 19.64198875427246), (-21.610029220581055, 18.903223037719727), (-22.297016143798828, 19.22223472595215), (-20.92945098876953, 18.587186813354492), (-21.610029220581055, 18.903223037719727), (-20.20063591003418, 18.380908966064453), (-20.92945098876953, 18.587186813354492), (-19.478620529174805, 18.176557540893555), (-20.20063591003418, 18.380908966064453), (-18.726346969604492, 18.088214874267578), (-19.478620529174805, 18.176557540893555), (-17.98109245300293, 18.000696182250977), (-18.726346969604492, 18.088214874267578), (-17.224315643310547, 18.032512664794922), (-17.98109245300293, 18.000696182250977), (-16.47460174560547, 18.06403350830078), (-17.224315643310547, 18.032512664794922), (-15.732397079467773, 18.2152099609375), (-16.47460174560547, 18.06403350830078), (-14.99711799621582, 18.364974975585938), (-15.732397079467773, 18.2152099609375), (-14.288187980651855, 18.631698608398438), (-14.99711799621582, 18.364974975585938), (-13.5858736038208, 18.89593505859375), (-14.288187980651855, 18.631698608398438), (-12.928088188171387, 19.271486282348633), (-13.5858736038208, 18.89593505859375), (-12.276440620422363, 19.643531799316406), (-12.928088188171387, 19.271486282348633), (-11.686373710632324, 20.118444442749023), (-12.276440620422363, 19.643531799316406), (-11.101812362670898, 20.588926315307617), (-11.686373710632324, 20.118444442749023), (-10.594335556030273, 21.15123176574707), (-11.101812362670898, 20.588926315307617), (-10.091594696044922, 21.70829200744629), (-10.594335556030273, 21.15123176574707), (-9.679495811462402, 22.343820571899414), (-10.091594696044922, 21.70829200744629), (-9.27124309539795, 22.973419189453125), (-9.679495811462402, 22.343820571899414), (-8.964909553527832, 23.666154861450195), (-9.27124309539795, 22.973419189453125), (-8.6614351272583, 24.352426528930664), (-8.964909553527832, 23.666154861450195), (-8.468586921691895, 25.084909439086914), (-8.6614351272583, 24.352426528930664), (-8.277538299560547, 25.810556411743164), (-8.468586921691895, 25.084909439086914), (-8.20303726196289, 26.564327239990234), (-8.277538299560547, 25.810556411743164), (-8.129230499267578, 27.311065673828125), (-8.20303726196289, 26.564327239990234), (-8.174949645996094, 28.067129135131836), (-8.129230499267578, 27.311065673828125), (-8.220242500305176, 28.816137313842773), (-8.174949645996094, 28.067129135131836), (-8.385032653808594, 29.555437088012695), (-8.220242500305176, 28.816137313842773), (-8.548285484313965, 30.287839889526367), (-8.385032653808594, 29.555437088012695), (-8.827993392944336, 30.99174690246582), (-8.548285484313965, 30.287839889526367), (-9.105091094970703, 31.6890869140625), (-8.827993392944336, 30.99174690246582), (-9.365285873413086, 32.15678405761719), (-9.105091094970703, 31.6890869140625), (-9.566667556762695, 32.51876449584961), (-9.365285873413086, 32.15678405761719), (-9.884418487548828, 32.97563171386719), (-9.566667556762695, 32.51876449584961), (-10.108772277832031, 33.298213958740234), (-9.884418487548828, 32.97563171386719), (-10.51561450958252, 33.77375793457031), (-10.108772277832031, 33.298213958740234), (-11.412135124206543, 34.675865173339844), (-11.362332344055176, 34.62823486328125), (-11.362332344055176, 34.62823486328125), (-10.725981712341309, 34.019649505615234), (-10.725981712341309, 34.019649505615234), (-10.51561450958252, 33.77375793457031), (-26.96015167236328, 25.74781608581543), (-26.969240188598633, 25.786550521850586), (-26.752744674682617, 24.863849639892578), (-26.96015167236328, 25.74781608581543), (-26.644533157348633, 24.548221588134766), (-26.752744674682617, 24.863849639892578), (-32.5643196105957, -10.927449226379395), (-33.30008316040039, -11.030470848083496), (-33.30008316040039, -11.030470848083496), (-33.829833984375, -11.036415100097656), (-33.829833984375, -11.036415100097656), (-34.2486457824707, -11.04111385345459), (-34.2486457824707, -11.04111385345459), (-34.80918884277344, -10.991266250610352), (-34.80918884277344, -10.991266250610352), (-35.193538665771484, -10.957086563110352), (-35.193538665771484, -10.957086563110352), (-35.79726791381836, -10.841845512390137), (-31.835418701171875, -10.825389862060547), (-32.5643196105957, -10.927449226379395), (-31.12456703186035, -10.609400749206543), (-31.835418701171875, -10.825389862060547), (-30.420347213745117, -10.395426750183105), (-31.12456703186035, -10.609400749206543), (-29.75164222717285, -10.071702003479004), (-30.420347213745117, -10.395426750183105), (-29.089176177978516, -9.750998497009277), (-29.75164222717285, -10.071702003479004), (-28.478830337524414, -9.327390670776367), (-29.089176177978516, -9.750998497009277), (-27.87417984008789, -8.907735824584961), (-28.478830337524414, -9.327390670776367), (-27.33699607849121, -8.394514083862305), (-27.87417984008789, -8.907735824584961), (-26.804824829101562, -7.886080741882324), (-27.33699607849121, -8.394514083862305), (-26.353824615478516, -7.295688629150391), (-26.804824829101562, -7.886080741882324), (-25.907032012939453, -6.710805416107178), (-26.353824615478516, -7.295688629150391), (-25.553150177001953, -6.057558059692383), (-25.907032012939453, -6.710805416107178), (-25.20256996154785, -5.410406589508057), (-25.553150177001953, -6.057558059692383), (-24.95438575744629, -4.710142612457275), (-25.20256996154785, -5.410406589508057), (-24.708518981933594, -4.01641321182251), (-24.95438575744629, -4.710142612457275), (-24.572052001953125, -3.2861108779907227), (-24.708518981933594, -4.01641321182251), (-24.436859130859375, -2.5626232624053955), (-24.572052001953125, -3.2861108779907227), (-24.41541862487793, -1.819989562034607), (-24.436859130859375, -2.5626232624053955), (-24.39417839050293, -1.0842857360839844), (-24.41541862487793, -1.819989562034607), (-24.488283157348633, -0.34732678532600403), (-24.39417839050293, -1.0842857360839844), (-24.58150863647461, 0.3827552795410156), (-24.488283157348633, -0.34732678532600403), (-24.788877487182617, 1.0961719751358032), (-24.58150863647461, 0.3827552795410156), (-24.99431037902832, 1.802931547164917), (-24.788877487182617, 1.0961719751358032), (-25.309913635253906, 2.4755074977874756), (-24.99431037902832, 1.802931547164917), (-25.62257194519043, 3.1418075561523438), (-25.309913635253906, 2.4755074977874756), (-26.038761138916016, 3.7572362422943115), (-25.62257194519043, 3.1418075561523438), (-26.451065063476562, 4.366921901702881), (-26.038761138916016, 3.7572362422943115), (-26.957744598388672, 4.910281658172607), (-26.451065063476562, 4.366921901702881), (-27.459697723388672, 5.448570728302002), (-26.957744598388672, 4.910281658172607), (-28.044584274291992, 5.906686782836914), (-27.459697723388672, 5.448570728302002), (-28.624013900756836, 6.360527992248535), (-28.044584274291992, 5.906686782836914), (-29.272930145263672, 6.722293376922607), (-28.624013900756836, 6.360527992248535), (-29.91579246520996, 7.080682754516602), (-29.272930145263672, 6.722293376922607), (-30.612998962402344, 7.337325572967529), (-29.91579246520996, 7.080682754516602), (-31.303699493408203, 7.591573715209961), (-30.612998962402344, 7.337325572967529), (-32.03229904174805, 7.73687219619751), (-31.303699493408203, 7.591573715209961), (-32.75409698486328, 7.880814552307129), (-32.03229904174805, 7.73687219619751), (-33.304649353027344, 7.917895793914795), (-32.75409698486328, 7.880814552307129), (-33.73268508911133, 7.946724891662598), (-33.304649353027344, 7.917895793914795), (-34.30630111694336, 7.926031112670898), (-33.73268508911133, 7.946724891662598), (-34.71285629272461, 7.911364555358887), (-34.30630111694336, 7.926031112670898), (-35.35235595703125, 7.821656703948975), (-34.71285629272461, 7.911364555358887), (-36.636226654052734, 7.539419174194336), (-36.56787109375, 7.556341171264648), (-36.56787109375, 7.556341171264648), (-35.68415451049805, 7.775112152099609), (-35.68415451049805, 7.775112152099609), (-35.35235595703125, 7.821656703948975), (-36.9965705871582, -10.5206298828125), (-37.03473663330078, -10.509302139282227), (-36.125328063964844, -10.779224395751953), (-36.9965705871582, -10.5206298828125), (-35.79726791381836, -10.841845512390137), (-36.125328063964844, -10.779224395751953), (-8.063498497009277, -33.59135437011719), (-8.34036922454834, -34.27645492553711), (-8.34036922454834, -34.27645492553711), (-8.59957504272461, -34.738216400146484), (-8.804484367370605, -35.10325241088867), (-8.59957504272461, -34.738216400146484), (-9.127352714538574, -35.5638542175293), (-8.804484367370605, -35.10325241088867), (-9.348721504211426, -35.87965774536133), (-9.127352714538574, -35.5638542175293), (-9.749750137329102, -36.345054626464844), (-9.348721504211426, -35.87965774536133), (-7.789212226867676, -32.91264343261719), (-8.063498497009277, -33.59135437011719), (-7.62144660949707, -32.19300842285156), (-7.789212226867676, -32.91264343261719), (-7.455246448516846, -31.48008918762207), (-7.62144660949707, -32.19300842285156), (-7.400606632232666, -30.743181228637695), (-7.455246448516846, -31.48008918762207), (-7.346477031707764, -30.01314926147461), (-7.400606632232666, -30.743181228637695), (-7.406275749206543, -29.276641845703125), (-7.346477031707764, -30.01314926147461), (-7.465516090393066, -28.547006607055664), (-7.406275749206543, -29.276641845703125), (-7.63831901550293, -27.828563690185547), (-7.465516090393066, -28.547006607055664), (-7.809509754180908, -27.116823196411133), (-7.63831901550293, -27.828563690185547), (-8.091171264648438, -26.433679580688477), (-7.809509754180908, -27.116823196411133), (-8.370203971862793, -25.75691032409668), (-8.091171264648438, -26.433679580688477), (-8.7539701461792, -25.12544822692871), (-8.370203971862793, -25.75691032409668), (-9.134154319763184, -24.4998779296875), (-8.7539701461792, -25.12544822692871), (-9.610816955566406, -23.935245513916016), (-9.134154319763184, -24.4998779296875), (-10.08303165435791, -23.37588119506836), (-9.610816955566406, -23.935245513916016), (-10.641161918640137, -22.891616821289062), (-10.08303165435791, -23.37588119506836), (-11.194084167480469, -22.4118709564209), (-10.641161918640137, -22.891616821289062), (-11.820293426513672, -22.019594192504883), (-11.194084167480469, -22.4118709564209), (-12.440658569335938, -21.630977630615234), (-11.820293426513672, -22.019594192504883), (-13.119929313659668, -21.34009552001953), (-12.440658569335938, -21.630977630615234), (-13.792860984802246, -21.05192756652832), (-13.119929313659668, -21.34009552001953), (-14.508898735046387, -20.869415283203125), (-13.792860984802246, -21.05192756652832), (-15.218254089355469, -20.6886043548584), (-14.508898735046387, -20.869415283203125), (-15.95388412475586, -20.61884117126465), (-15.218254089355469, -20.6886043548584), (-16.682649612426758, -20.54973030090332), (-15.95388412475586, -20.61884117126465), (-17.420230865478516, -20.594388961791992), (-16.682649612426758, -20.54973030090332), (-18.150930404663086, -20.638629913330078), (-17.420230865478516, -20.594388961791992), (-18.872770309448242, -20.796640396118164), (-18.150930404663086, -20.638629913330078), (-19.587873458862305, -20.953176498413086), (-18.872770309448242, -20.796640396118164), (-20.27665901184082, -21.220746994018555), (-19.587873458862305, -20.953176498413086), (-20.95901870727539, -21.485820770263672), (-20.27665901184082, -21.220746994018555), (-21.598228454589844, -21.85653305053711), (-20.95901870727539, -21.485820770263672), (-22.231473922729492, -22.223787307739258), (-21.598228454589844, -21.85653305053711), (-22.80577850341797, -22.688753128051758), (-22.231473922729492, -22.223787307739258), (-23.374723434448242, -23.149381637573242), (-22.80577850341797, -22.688753128051758), (-23.870349884033203, -23.69744873046875), (-23.374723434448242, -23.149381637573242), (-24.361351013183594, -24.240400314331055), (-23.870349884033203, -23.69744873046875), (-24.676387786865234, -24.695669174194336), (-24.361351013183594, -24.240400314331055), (-24.92706871032715, -25.05793571472168), (-24.676387786865234, -24.695669174194336), (-25.206127166748047, -25.568016052246094), (-24.92706871032715, -25.05793571472168), (-25.404233932495117, -25.930126190185547), (-25.206127166748047, -25.568016052246094), (-25.656522750854492, -26.533771514892578), (-25.404233932495117, -25.930126190185547), (-26.073007583618164, -27.79975700378418), (-26.0526123046875, -27.731698989868164), (-26.0526123046875, -27.731698989868164), (-25.78761100769043, -26.847421646118164), (-25.78761100769043, -26.847421646118164), (-25.656522750854492, -26.533771514892578), (-10.655119895935059, -37.250919342041016), (-10.626264572143555, -37.2235107421875), (-10.626264572143555, -37.2235107421875), (-9.967655181884766, -36.59793472290039), (-9.967655181884766, -36.59793472290039), (-9.749750137329102, -36.345054626464844), (-61.77070236206055, -36.39175796508789), (-48.69463348388672, -33.2445068359375), (-48.69463348388672, -33.2445068359375), (-26.073007583618164, -27.79975700378418), (-0.493686318397522, 71.55609893798828), (-4.493114948272705, 58.04686737060547), (-4.493114948272705, 58.04686737060547), (-11.412135124206543, 34.675865173339844), (52.304443359375, -27.1765193939209), (61.988338470458984, -37.27635192871094), (35.55128479003906, -9.703786849975586), (52.304443359375, -27.1765193939209), (-61.988338470458984, 34.45484161376953), (-52.70185852050781, 24.595720291137695), (-52.70185852050781, 24.595720291137695), (-36.636226654052734, 7.539419174194336), (-26.969240188598633, 25.786550521850586), (-39.79673767089844, 28.961746215820312), (-39.79673767089844, 28.961746215820312), (-61.988338470458984, 34.45484161376953), (9.701143264770508, 35.30781555175781), (5.966776371002197, 48.58556365966797), (5.966776371002197, 48.58556365966797), (-0.493686318397522, 71.55609893798828), (47.519813537597656, 31.269563674926758), (60.7093620300293, 34.412105560302734), (24.70186424255371, 25.83296012878418), (47.519813537597656, 31.269563674926758), (44.79167556762695, 17.85196304321289), (35.59071350097656, 8.27963638305664), (47.519813537597656, 31.269563674926758), (60.7093620300293, 34.412105560302734), (44.79167556762695, 17.85196304321289), (39.040550231933594, -31.35257911682129), (25.775951385498047, -27.928438186645508), (61.988338470458984, -37.27635192871094), (39.040550231933594, -31.35257911682129), (3.3256006240844727, -58.71738815307617), (-0.5651295185089111, -71.55609893798828), (10.056571960449219, -36.50639343261719), (3.3256006240844727, -58.71738815307617), (-6.959155559539795, -49.81690979003906), (-10.655119895935059, -37.250919342041016), (-0.5651295185089111, -71.55609893798828), (-6.959155559539795, -49.81690979003906), (-37.03473663330078, -10.509302139282227), (-46.095523834228516, -19.990047454833984), (-46.095523834228516, -19.990047454833984), (-61.77070236206055, -36.39175796508789), (-48.69463348388672, -33.2445068359375)]
    with open("../file/point.json") as f:
        data = json.load(f)
    # print(data)
    # paths = path_algorithm.YdirectionZigPath(xmin, xmax, ymin, ymax, -2, Ny, 4)  # 单向锯齿
    # paths = path_algorithm.YdirectionAlternatingZigPath(xmin, xmax, ymin, ymax, -2, Ny, 4)  # 双向锯齿
    # paths = path_algorithm.SpiralPathOut(0, 0, -10, 73, 0.5, 10)  # 螺旋路径1，从内到外
    # # paths = path_algorithm.SpiralPathIn(-106, 93, -2, 10, 1, 2)  # 螺旋路径2，从外向内, 不连续圆
    paths = path_algorithm.OffsetPath(data, diameter, -3, layer, step_over)  # 轮廓内部切割路径
    # # paths = path_algorithm.ContourPath(ef, diameter, z_depth, layer)  # 曲线跟随
    # # paths = path_algorithm.SpiralPath(0, 0, -3, 10, 1)  # 画圆
    s = time.time()
    print(s)
    (raw_toolpath, n_raw) = adaptive_path_drop_cutter(surface, cutter, paths)
    s1 = time.time()
    print(s1 - s)
    (toolpaths, n_filtered) = filterCLPaths(raw_toolpath, tolerance=0.001)
    write_zig_gcode_file(stlfile, surface.size(), 0, n_raw, 0.001, 0, 0, toolpaths)
    vtk_all(simplify_file, toolpaths)

    # pool = ThreadPool(20)  # 使用线程池
    # tasks = [i for i in range(1, 76)]
    # results = pool.map(tool_threading, tasks)
    # pool.close()
    # pool.join()

    # for i in range(1, 76):
    #     # threading.Thread(target=tool_threading, args=(i, surface, cutter,)).start()
    #     Process(target=tool_threading, args=(i, )).start()
    #     if i % 2 == 0:
    #         time.sleep(3)

    # s = time.time()
    # print(s)

    # shared_list = []
    # processes_num = 4
    # radius = 75
    # with multiprocessing.Pool(processes=processes_num) as pool:
    #     with multiprocessing.Manager() as manager:
    #         shared_dict = manager.dict()
    #         results = pool.starmap(tool_threading, [[i, shared_dict] for i in range(1, 76)])
    #         for i in range(1, 76):
    #             shared_list.append(shared_dict[i])

    # processes_num = 4
    # radius = 73
    # shared_list = []
    # with multiprocessing.Pool(processes=processes_num) as pool:
    #     with multiprocessing.Manager() as manager:
    #         shared_dict = manager.dict()
    #         results = pool.starmap(tool_layer, [[radius, num, processes_num, shared_dict] for num in range(1, processes_num + 1)])
    #         for i in range(1, processes_num + 1):
    #             shared_list.append(shared_dict[i])
    # s1 = time.time()
    # print(s1 - s)
    # gcode_file(shared_list)
    # vtk_layer(simplify_file, shared_list)
