import pyclipper
import matplotlib.pyplot as plt
from shapely.geometry import Polygon
from shapely.ops import unary_union


allPath =[[(-28.065235137939453, -10.599178314208984), (-28.75688934326172, -8.54642391204834), (-29.298616409301758, -6.449113368988037), (-29.68759536743164, -4.318179607391357), (-29.921796798706055, -2.1647326946258545), (-30.0, 0.0), (-29.921796798706055, 2.1647326946258545), (-29.68759536743164, 4.318179607391357), (-29.298616409301758, 6.449113368988037), (-28.75688934326172, 8.54642391204834), (-28.065235137939453, 10.599178314208984), (-27.227262496948242, 12.596673011779785), (-26.247339248657227, 14.528494834899902), (-25.13057518005371, 16.384571075439453), (-23.88279151916504, 18.15522575378418), (-22.510494232177734, 19.831228256225586), (-21.020837783813477, 21.403839111328125), (-19.421588897705078, 22.8648624420166), (-17.721084594726562, 24.206676483154297), (-15.928189277648926, 25.42228889465332), (-14.052252769470215, 26.505361557006836), (-12.103055000305176, 27.450246810913086), (-10.0907564163208, 28.25201988220215), (-8.025850296020508, 28.9064998626709), (-5.919100284576416, 29.410274505615234), (-3.781491279602051, 29.760717391967773), (-1.6241672039031982, 29.956003189086914), (0.5416244864463806, 29.99510955810547), (2.70459246635437, 29.877838134765625), (4.85345983505249, 29.604795455932617), (6.977023601531982, 29.17740821838379), (9.064212799072266, 28.597902297973633), (11.104145050048828, 27.869300842285156), (13.086185455322266, 26.995403289794922), (15.0, 25.980762481689453), (16.83561134338379, 24.830669403076172), (18.583450317382812, 23.551122665405273), (20.234403610229492, 22.14879035949707), (21.779865264892578, 20.630983352661133), (23.211774826049805, 19.005617141723633), (24.52267074584961, 17.281164169311523), (25.70571517944336, 15.466615676879883), (26.754743576049805, 13.571431159973145), (27.664283752441406, 11.605491638183594), (28.429595947265625, 9.579046249389648), (29.046688079833984, 7.502659797668457), (29.512346267700195, 5.387158393859863), (29.824138641357422, 3.243570566177368), (29.98044204711914, 1.0830724239349365), (30.0, 3.673940187178589e-15), (29.98044204711914, -1.0830724239349365), (29.824138641357422, -3.243570566177368), (29.512346267700195, -5.387158393859863), (29.046688079833984, -7.502659797668457), (28.429595947265625, -9.579046249389648), (27.664283752441406, -11.605491638183594), (26.754743576049805, -13.571431159973145), (25.70571517944336, -15.466615676879883), (24.52267074584961, -17.281164169311523), (23.211774826049805, -19.005617141723633), (21.779865264892578, -20.630983352661133), (20.234403610229492, -22.14879035949707), (18.583450317382812, -23.551122665405273), (16.83561134338379, -24.830669403076172), (15.0, -25.980762481689453), (13.086185455322266, -26.995403289794922), (11.104145050048828, -27.869300842285156), (9.064212799072266, -28.597902297973633), (6.977023601531982, -29.17740821838379), (4.85345983505249, -29.604795455932617), (2.70459246635437, -29.877838134765625), (0.5416244864463806, -29.99510955810547), (-1.6241672039031982, -29.956003189086914), (-3.781491279602051, -29.760717391967773), (-5.919100284576416, -29.410274505615234), (-8.025850296020508, -28.9064998626709), (-10.0907564163208, -28.25201988220215), (-12.103055000305176, -27.450246810913086), (-14.052252769470215, -26.505361557006836), (-15.928189277648926, -25.42228889465332), (-17.721084594726562, -24.206676483154297), (-19.421588897705078, -22.8648624420166), (-21.020837783813477, -21.403839111328125), (-22.510494232177734, -19.831228256225586), (-23.88279151916504, -18.15522575378418), (-25.13057518005371, -16.384571075439453), (-26.247339248657227, -14.528494834899902), (-27.227262496948242, -12.596673011779785), (-28.065235137939453, -10.599178314208984)], [-0.1, -20.0], 0, [], 2824.997320300049]

cutOut = [[(-86.15875244140625, -26.012861251831055, 0.0), (-87.1724853515625, -22.382089614868164, 0.0), (-88.03328704833984, -18.712051391601562, 0.0), (-88.7396469116211, -15.009186744689941, 0.0), (-89.29032135009766, -11.279991149902344, 0.0), (-89.68435668945312, -7.531005859375, 0.0), (-89.92105102539062, -3.7688088417053223, 0.0), (-90.0, 0.0, 0.0), (-89.92105102539062, 3.7688088417053223, 0.0), (-89.68435668945312, 7.531005859375, 0.0), (-89.29032135009766, 11.279991149902344, 0.0), (-88.7396469116211, 15.009186744689941, 0.0), (-88.03328704833984, 18.712051391601562, 0.0), (-87.1724853515625, 22.382089614868164, 0.0), (-86.15875244140625, 26.012861251831055, 0.0), (-84.9938735961914, 29.597997665405273, 0.0), (-83.67988586425781, 33.13121032714844, 0.0), (-82.2190933227539, 36.60629653930664, 0.0), (-80.61405944824219, 40.01716613769531, 0.0), (-78.86759948730469, 43.35783004760742, 0.0), (-76.98278045654297, 46.622432708740234, 0.0), (-74.9629135131836, 49.805240631103516, 0.0), (-72.81153106689453, 52.900672912597656, 0.0), (-70.53240966796875, 55.90330123901367, 0.0), (-68.12955474853516, 58.80785369873047, 0.0), (-65.607177734375, 61.60923767089844, 0.0), (-62.96969985961914, 64.30254364013672, 0.0), (-60.22175598144531, 66.8830337524414, 0.0), (-57.368160247802734, 69.34619140625, 0.0), (-54.41392135620117, 71.68769073486328, 0.0), (-51.364219665527344, 73.90342712402344, 0.0), (-48.22441101074219, 75.98950958251953, 0.0), (-45.0, 77.9422836303711, 0.0), (-41.6966438293457, 79.7583236694336, 0.0), (-38.32013702392578, 81.43443298339844, 0.0), (-34.87640380859375, 82.96768188476562, 0.0), (-31.371484756469727, 84.35537719726562, 0.0), (-27.8115291595459, 85.59508514404297, 0.0), (-24.202783584594727, 86.68463134765625, 0.0), (-20.551578521728516, 87.62210083007812, 0.0), (-16.86431884765625, 88.40585327148438, 0.0), (-13.147472381591797, 89.03450775146484, 0.0), (-9.407561302185059, 89.50697326660156, 0.0), (-5.65114688873291, 89.82240295410156, 0.0), (-1.8848178386688232, 89.98026275634766, 0.0), (1.8848178386688232, 89.98026275634766, 0.0), (5.65114688873291, 89.82240295410156, 0.0), (9.407561302185059, 89.50697326660156, 0.0), (13.147472381591797, 89.03450775146484, 0.0), (16.86431884765625, 88.40585327148438, 0.0), (20.551578521728516, 87.62210083007812, 0.0), (24.202783584594727, 86.68463134765625, 0.0), (27.8115291595459, 85.59508514404297, 0.0), (31.371484756469727, 84.35537719726562, 0.0), (34.87640380859375, 82.96768188476562, 0.0), (38.32013702392578, 81.43443298339844, 0.0), (41.6966438293457, 79.7583236694336, 0.0), (45.0, 77.9422836303711, 0.0), (48.22441101074219, 75.98950958251953, 0.0), (51.364219665527344, 73.90342712402344, 0.0), (54.41392135620117, 71.68769073486328, 0.0), (57.368160247802734, 69.34619140625, 0.0), (60.22175598144531, 66.8830337524414, 0.0), (62.96969985961914, 64.30254364013672, 0.0), (65.607177734375, 61.60923767089844, 0.0), (68.12955474853516, 58.80785369873047, 0.0), (70.53240966796875, 55.90330123901367, 0.0), (72.81153106689453, 52.900672912597656, 0.0), (74.9629135131836, 49.805240631103516, 0.0), (76.98278045654297, 46.622432708740234, 0.0), (78.86759948730469, 43.35783004760742, 0.0), (80.61405944824219, 40.01716613769531, 0.0), (82.2190933227539, 36.60629653930664, 0.0), (83.67988586425781, 33.13121032714844, 0.0), (84.9938735961914, 29.597997665405273, 0.0), (86.15875244140625, 26.012861251831055, 0.0), (87.1724853515625, 22.382089614868164, 0.0), (88.03328704833984, 18.712051391601562, 0.0), (88.7396469116211, 15.009186744689941, 0.0), (89.29032135009766, 11.279991149902344, 0.0), (89.68435668945312, 7.531005859375, 0.0), (89.92105102539062, 3.7688088417053223, 0.0), (90.0, 5.0989848601008456e-14, 0.0), (90.0, 1.1021821408568715e-14, 0.0), (89.92105102539062, -3.7688088417053223, 0.0), (89.68435668945312, -7.531005859375, 0.0), (89.29032135009766, -11.279991149902344, 0.0), (88.7396469116211, -15.009186744689941, 0.0), (88.03328704833984, -18.712051391601562, 0.0), (87.1724853515625, -22.382089614868164, 0.0), (86.15875244140625, -26.012861251831055, 0.0), (84.9938735961914, -29.597997665405273, 0.0), (83.67988586425781, -33.13121032714844, 0.0), (82.2190933227539, -36.60629653930664, 0.0), (80.61405944824219, -40.01716613769531, 0.0), (78.86759948730469, -43.35783004760742, 0.0), (76.98278045654297, -46.622432708740234, 0.0), (74.9629135131836, -49.805240631103516, 0.0), (72.81153106689453, -52.900672912597656, 0.0), (70.53240966796875, -55.90330123901367, 0.0), (68.12955474853516, -58.80785369873047, 0.0), (65.607177734375, -61.60923767089844, 0.0), (62.96969985961914, -64.30254364013672, 0.0), (60.22175598144531, -66.8830337524414, 0.0), (57.368160247802734, -69.34619140625, 0.0), (54.41392135620117, -71.68769073486328, 0.0), (51.364219665527344, -73.90342712402344, 0.0), (48.22441101074219, -75.98950958251953, 0.0), (45.0, -77.9422836303711, 0.0), (41.6966438293457, -79.7583236694336, 0.0), (38.32013702392578, -81.43443298339844, 0.0), (34.87640380859375, -82.96768188476562, 0.0), (31.371484756469727, -84.35537719726562, 0.0), (27.8115291595459, -85.59508514404297, 0.0), (24.202783584594727, -86.68463134765625, 0.0), (20.551578521728516, -87.62210083007812, 0.0), (16.86431884765625, -88.40585327148438, 0.0), (13.147472381591797, -89.03450775146484, 0.0), (9.407561302185059, -89.50697326660156, 0.0), (5.65114688873291, -89.82240295410156, 0.0), (1.8848178386688232, -89.98026275634766, 0.0), (-1.8848178386688232, -89.98026275634766, 0.0), (-5.65114688873291, -89.82240295410156, 0.0), (-9.407561302185059, -89.50697326660156, 0.0), (-13.147472381591797, -89.03450775146484, 0.0), (-16.86431884765625, -88.40585327148438, 0.0), (-20.551578521728516, -87.62210083007812, 0.0), (-24.202783584594727, -86.68463134765625, 0.0), (-27.8115291595459, -85.59508514404297, 0.0), (-31.371484756469727, -84.35537719726562, 0.0), (-34.87640380859375, -82.96768188476562, 0.0), (-38.32013702392578, -81.43443298339844, 0.0), (-41.6966438293457, -79.7583236694336, 0.0), (-45.0, -77.9422836303711, 0.0), (-48.22441101074219, -75.98950958251953, 0.0), (-51.364219665527344, -73.90342712402344, 0.0), (-54.41392135620117, -71.68769073486328, 0.0), (-57.368160247802734, -69.34619140625, 0.0), (-60.22175598144531, -66.8830337524414, 0.0), (-62.96969985961914, -64.30254364013672, 0.0), (-65.607177734375, -61.60923767089844, 0.0), (-68.12955474853516, -58.80785369873047, 0.0), (-70.53240966796875, -55.90330123901367, 0.0), (-72.81153106689453, -52.900672912597656, 0.0), (-74.9629135131836, -49.805240631103516, 0.0), (-76.98278045654297, -46.622432708740234, 0.0), (-78.86759948730469, -43.35783004760742, 0.0), (-80.61405944824219, -40.01716613769531, 0.0), (-82.2190933227539, -36.60629653930664, 0.0), (-83.67988586425781, -33.13121032714844, 0.0), (-84.9938735961914, -29.597997665405273, 0.0), (-86.15875244140625, -26.012861251831055, 0.0)], [-8.1, -20.0], 0, [], 25439.459507435444]


# 示例外轮廓（一个大矩形）
outer = Polygon(cutOut[0])

# 示例内孔（你可以根据自己的实际数据填入）
hole1 = Polygon(allPath[0])

hole2 = Polygon([
    (6, 6),
    (8, 6),
    (8, 8),
    (6, 8)
])

# 合并所有内孔
allHole = [hole1]
holes_union = unary_union(allHole)

# 差集区域（pocket 区域）
pocket = outer.difference(holes_union)

# === Pyclipper 内缩处理 ===

scale = 1000  # 放大比例，避免浮点误差
step = 1  # 每次内缩多少（单位同原始坐标）

def polygon_to_paths(polygon):
    """将 Shapely Polygon 或 MultiPolygon 转换为 pyclipper 路径（多边形列表）"""
    paths = []
    if polygon.geom_type == 'Polygon':
        paths.append([(int(x * scale), int(y * scale)) for x, y,z in polygon.exterior.coords])
        for hole in polygon.interiors:
            paths.append([(int(x * scale), int(y * scale)) for x, y,z in hole.coords])
    elif polygon.geom_type == 'MultiPolygon':
        for poly in polygon.geoms:
            paths.extend(polygon_to_paths(poly))
    return paths

# 初始化路径
paths = []
current_paths = polygon_to_paths(pocket)

while current_paths:
    # 保存当前层
    scaled_layer = [[(x / scale, y / scale) for x, y in path] for path in current_paths]
    paths.append(scaled_layer)

    # 内缩路径
    pco = pyclipper.PyclipperOffset()
    pco.AddPaths(current_paths, pyclipper.JT_MITER, pyclipper.ET_CLOSEDPOLYGON)
    current_paths = pco.Execute(-step * scale)

    # 如果缩完没路径了，停止
    if not current_paths:
        break

# === 可视化 ===
fig, ax = plt.subplots(figsize=(6, 6))
colors = plt.cm.viridis_r  # colormap

for i, layer in enumerate(paths):
    color = colors(i / len(paths))
    for path in layer:
        xs, ys = zip(*path)
        ax.fill(xs, ys, color=color, alpha=0.6, edgecolor='black')

ax.set_title("使用 pyclipper 精确逐步缩小路径")
ax.axis('equal')
plt.show()
