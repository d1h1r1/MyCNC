from shapely.geometry import Polygon
from shapely.ops import unary_union
import matplotlib.pyplot as plt
import shapely.geometry as sg

# 外轮廓（矩形）
outer = Polygon([[-17.72319221496582, -2.509667158126831, 0], [-17.821346282958984, -1.6761826276779175, 0], [-17.880325317382812, -0.8390135169029236, 0], [-17.899999618530273, 0, 0], [-17.880325317382812, 0.8390135169029236, 0], [-17.821346282958984, 1.6761826276779175, 0], [-17.72319221496582, 2.509667158126831, 0], [-17.586078643798828, 3.337635040283203, 0], [-17.410308837890625, 4.158266067504883, 0], [-17.196264266967773, 4.969756126403809, 0], [-16.944419860839844, 5.770321369171143, 0], [-16.65532875061035, 6.558202743530273, 0], [-16.32962417602539, 7.331667423248291, 0], [-15.968025207519531, 8.08901596069336, 0], [-15.571324348449707, 8.828582763671875, 0], [-15.14039421081543, 9.548742294311523, 0], [-14.67618179321289, 10.24791145324707, 0], [-14.179708480834961, 10.924553871154785, 0], [-13.652064323425293, 11.577181816101074, 0], [-13.09441089630127, 12.204360008239746, 0], [-12.507972717285156, 12.804710388183594, 0], [-11.894039154052734, 13.376914024353027, 0], [-11.253960609436035, 13.91971206665039, 0], [-10.589142799377441, 14.43191146850586, 0], [-9.901047706604004, 14.912385940551758, 0], [-9.191187858581543, 15.360079765319824, 0], [-8.461124420166016, 15.774009704589844, 0], [-7.712460994720459, 16.15326499938965, 0], [-6.946844100952148, 16.497011184692383, 0], [-6.165956497192383, 16.804492950439453, 0], [-5.371514797210693, 17.075035095214844, 0], [-4.565265655517578, 17.308042526245117, 0], [-3.748980760574341, 17.50300407409668, 0], [-2.924454689025879, 17.659488677978516, 0], [-2.0935003757476807, 17.77715492248535, 0], [-1.2579437494277954, 17.855743408203125, 0], [-0.4196220636367798, 17.89508056640625, 0], [0.4196220636367798, 17.89508056640625, 0], [1.2579437494277954, 17.855743408203125, 0], [2.0935003757476807, 17.77715492248535, 0], [2.924454689025879, 17.659488677978516, 0], [3.748980760574341, 17.50300407409668, 0], [4.565265655517578, 17.308042526245117, 0], [5.371514797210693, 17.075035095214844, 0], [6.165956497192383, 16.804492950439453, 0], [6.946844100952148, 16.497011184692383, 0], [7.712460994720459, 16.15326499938965, 0], [8.461124420166016, 15.774009704589844, 0], [9.191187858581543, 15.360079765319824, 0], [9.901047706604004, 14.912385940551758, 0], [10.589142799377441, 14.43191146850586, 0], [11.253960609436035, 13.91971206665039, 0], [11.894039154052734, 13.376914024353027, 0], [12.507972717285156, 12.804710388183594, 0], [13.09441089630127, 12.204360008239746, 0], [13.652064323425293, 11.577181816101074, 0], [14.179708480834961, 10.924553871154785, 0], [14.67618179321289, 10.24791145324707, 0], [15.14039421081543, 9.548742294311523, 0], [15.571324348449707, 8.828582763671875, 0], [15.968025207519531, 8.08901596069336, 0], [16.32962417602539, 7.331667423248291, 0], [16.65532875061035, 6.558202743530273, 0], [16.944419860839844, 5.770321369171143, 0], [17.196264266967773, 4.969756126403809, 0], [17.410308837890625, 4.158266067504883, 0], [17.586078643798828, 3.337635040283203, 0], [17.72319221496582, 2.509667158126831, 0], [17.821346282958984, 1.6761826276779175, 0], [17.880325317382812, 0.8390135169029236, 0], [17.899999618530273, 2.1921176676041034e-15, 0], [17.880325317382812, -0.8390135169029236, 0], [17.821346282958984, -1.6761826276779175, 0], [17.72319221496582, -2.509667158126831, 0], [17.586078643798828, -3.337635040283203, 0], [17.410308837890625, -4.158266067504883, 0], [17.196264266967773, -4.969756126403809, 0], [16.944419860839844, -5.770321369171143, 0], [16.65532875061035, -6.558202743530273, 0], [16.32962417602539, -7.331667423248291, 0], [15.968025207519531, -8.08901596069336, 0], [15.571324348449707, -8.828582763671875, 0], [15.14039421081543, -9.548742294311523, 0], [14.67618179321289, -10.24791145324707, 0], [14.179708480834961, -10.924553871154785, 0], [13.652064323425293, -11.577181816101074, 0], [13.09441089630127, -12.204360008239746, 0], [12.507972717285156, -12.804710388183594, 0], [11.894039154052734, -13.376914024353027, 0], [11.253960609436035, -13.91971206665039, 0], [10.589142799377441, -14.43191146850586, 0], [9.901047706604004, -14.912385940551758, 0], [9.191187858581543, -15.360079765319824, 0], [8.461124420166016, -15.774009704589844, 0], [7.712460994720459, -16.15326499938965, 0], [6.946844100952148, -16.497011184692383, 0], [6.165956497192383, -16.804492950439453, 0], [5.371514797210693, -17.075035095214844, 0], [4.565265655517578, -17.308042526245117, 0], [3.748980760574341, -17.50300407409668, 0], [2.924454689025879, -17.659488677978516, 0], [2.0935003757476807, -17.77715492248535, 0], [1.2579437494277954, -17.855743408203125, 0], [0.4196220636367798, -17.89508056640625, 0], [-0.4196220636367798, -17.89508056640625, 0], [-1.2579437494277954, -17.855743408203125, 0], [-2.0935003757476807, -17.77715492248535, 0], [-2.924454689025879, -17.659488677978516, 0], [-3.748980760574341, -17.50300407409668, 0], [-4.565265655517578, -17.308042526245117, 0], [-5.371514797210693, -17.075035095214844, 0], [-6.165956497192383, -16.804492950439453, 0], [-6.946844100952148, -16.497011184692383, 0], [-7.712460994720459, -16.15326499938965, 0], [-8.461124420166016, -15.774009704589844, 0], [-9.191187858581543, -15.360079765319824, 0], [-9.901047706604004, -14.912385940551758, 0], [-10.589142799377441, -14.43191146850586, 0], [-11.253960609436035, -13.91971206665039, 0], [-11.894039154052734, -13.376914024353027, 0], [-12.507972717285156, -12.804710388183594, 0], [-13.09441089630127, -12.204360008239746, 0], [-13.652064323425293, -11.577181816101074, 0], [-14.179708480834961, -10.924553871154785, 0], [-14.67618179321289, -10.24791145324707, 0], [-15.14039421081543, -9.548742294311523, 0], [-15.571324348449707, -8.828582763671875, 0], [-15.968025207519531, -8.08901596069336, 0], [-16.32962417602539, -7.331667423248291, 0], [-16.65532875061035, -6.558202743530273, 0], [-16.944419860839844, -5.770321369171143, 0], [-17.196264266967773, -4.969756126403809, 0], [-17.410308837890625, -4.158266067504883, 0], [-17.586078643798828, -3.337635040283203, 0], [-17.72319221496582, -2.509667158126831, 0]])

# 创建两个内轮廓（需要减去的区域）
hole1 = Polygon([
    (2, 2),
    (4, 2),
    (4, 4),
    (2, 4)
])

hole2 = Polygon([
    (6, 6),
    (8, 6),
    (8, 8),
    (6, 8)
])

hole = Polygon([[-6.96521520614624, -0.6969749331474304], [-6.991298675537109, -0.3489212095737457], [-7, 0], [-6.998954709370917, 0.04262692178797123], [-6.991586685180664, 0.34309473633766174], [-6.99133445855343, 0.34819731441411106], [-6.988201134132616, 0.3907217747334278], [-6.966367244720459, 0.6853647828102112], [-6.965358338211522, 0.6955324599237153], [-6.960144563154741, 0.7378522379831833], [-6.924402713775635, 1.0259873867034912], [-6.922137267661817, 1.041145413572138], [-6.91485542384061, 1.0831587625272345], [-6.865792751312256, 1.3641436100006104], [-6.861777169776685, 1.3841803846937237], [-6.852444911725593, 1.4257863463777485], [-6.790679454803467, 1.6990208625793457], [-6.784428076310591, 1.7237881393143626], [-6.773067798036518, 1.7648866812388102], [-6.699243068695068, 2.0298140048980713], [-6.690281089146932, 2.05912762482961], [-6.676920042615948, 2.099619988239173], [-6.591702938079834, 2.3557281494140625], [-6.5795697515661065, 2.3893684582276777], [-6.564240046703454, 2.4291572469653504], [-6.46831750869751, 2.6759793758392334], [-6.452567960276748, 2.7136931029233065], [-6.4353065649668375, 2.7526827277559223], [-6.3293843269348145, 2.9897983074188232], [-6.3095903830094775, 3.031298565864563], [-6.290438708392057, 3.069395274104494], [-6.175236701965332, 3.2964303493499756], [-6.150990791031808, 3.3413983063264325], [-6.129994869232178, 3.378510537292018], [-6.006245136260986, 3.5951385498046875], [-5.977162236878367, 3.6432244705431387], [-5.954372484033758, 3.679263033288898], [-5.822815418243408, 3.885205030441284], [-5.788534729408496, 3.936029948610248], [-5.764006064154885, 3.970908170035391], [-5.625389575958252, 4.1659321784973145], [-5.585575769886826, 4.219089357780688], [-5.559367080168291, 4.252723438089544], [-5.4144415855407715, 4.4366455078125], [-5.368787730823864, 4.49170232108145], [-5.340961992379391, 4.52401136340517], [-5.190478324890137, 4.6966938972473145], [-5.138707556869044, 4.753193496935295], [-5.109331655502319, 4.784099892413978], [-4.954038143157959, 4.945452690124512], [-4.895904916705507, 5.002915678602276], [-4.865049529798103, 5.032345136006673], [-4.705689907073975, 5.182323932647705], [-4.640980831782023, 5.240250450192076], [-4.608720072832974, 5.268132173653805], [-4.446030139923096, 5.406737804412842], [-4.374566903258815, 5.4646100347692315], [-4.340978381128022, 5.490877079241203], [-4.175683498382568, 5.618155479431152], [-4.097322448094686, 5.67543932018858], [-4.062486793055679, 5.700028413714785], [-3.895298957824707, 5.816067695617676], [-3.809934442693537, 5.872215681365042], [-3.6065503728800805, 5.999365750674544], [-3.851615414383141, 5.843798077577355], [-3.8516154143831445, 5.843798077577352], [-3.605551242828369, 6], [-3.336878776550293, 6], [-3.064133644104004, 6], [-2.7748630046844482, 6], [-2.4811909198760986, 6], [-2.161058187484741, 6], [-1.8615535497665405, 6], [-1.5815722942352295, 6], [-1.2990399599075317, 6], [-1.0137993097305298, 6], [-0.7253742218017578, 6], [-0.43366846442222595, 6], [-0.21706712245941162, 6], [0, 6], [0.24254901707172394, 6], [0.48348796367645264, 6], [0.7228692173957825, 6], [0.9607451558113098, 6], [1.1971681118011475, 6], [1.4321905374526978, 6], [1.6658647060394287, 6], [1.8982456922531128, 6], [2.129340410232544, 6], [2.358621120452881, 6], [2.6603360176086426, 6], [2.9503211975097656, 6], [3.2806663513183594, 6], [3.605551242828369, 6], [3.6065503728800805, 5.999365750674544], [3.809934442693537, 5.872215681365042], [3.895298957824707, 5.816067695617676], [4.062486793055679, 5.700028413714785], [4.097322448094686, 5.67543932018858], [4.175683498382568, 5.618155479431152], [4.340978381128022, 5.490877079241203], [4.374566903258815, 5.4646100347692315], [4.446030139923096, 5.406737804412842], [4.608720072832974, 5.268132173653805], [4.640980831782023, 5.240250450192076], [4.705689907073975, 5.182323932647705], [4.865049529798103, 5.032345136006673], [4.895904916705507, 5.002915678602276], [4.954038143157959, 4.945452690124512], [5.109331655502319, 4.784099892413978], [5.138707556869044, 4.753193496935295], [5.190478324890137, 4.6966938972473145], [5.340961992379391, 4.52401136340517], [5.368787730823864, 4.49170232108145], [5.4144415855407715, 4.4366455078125], [5.559367080168291, 4.252723438089544], [5.585575769886826, 4.219089357780688], [5.625389575958252, 4.1659321784973145], [5.764006064154885, 3.970908170035391], [5.788534729408496, 3.936029948610248], [5.822815418243408, 3.885205030441284], [5.954372484033758, 3.679263033288898], [5.977162236878367, 3.6432244705431387], [6.006245136260986, 3.5951385498046875], [6.129994869232178, 3.378510537292018], [6.150990791031808, 3.3413983063264325], [6.175236701965332, 3.2964303493499756], [6.290438708392057, 3.069395274104494], [6.3095903830094775, 3.031298565864563], [6.3293843269348145, 2.9897983074188232], [6.4353065649668375, 2.7526827277559223], [6.452567960276748, 2.7136931029233065], [6.46831750869751, 2.6759793758392334], [6.564240046703454, 2.4291572469653504], [6.5795697515661065, 2.3893684582276777], [6.591702938079834, 2.3557281494140625], [6.676920042615948, 2.099619988239173], [6.690281089146932, 2.05912762482961], [6.699243068695068, 2.0298140048980713], [6.773067798036518, 1.7648866812388102], [6.784428076310591, 1.7237881393143626], [6.790679454803467, 1.6990208625793457], [6.852444911725593, 1.4257863463777485], [6.861777169776685, 1.3841803846937237], [6.865792751312256, 1.3641436100006104], [6.91485542384061, 1.0831587625272345], [6.922137267661817, 1.041145413572138], [6.924402713775635, 1.0259873867034912], [6.960144563154741, 0.7378522379831833], [6.965358338211522, 0.6955324599237153], [6.966367244720459, 0.6853647828102112], [6.988201134132616, 0.3907217747334278], [6.99133445855343, 0.34819731441411106], [6.991586685180664, 0.34309473633766174], [6.998954709370931, 0.04262692178740718], [7, 8.572527703398379e-16], [6.991298675537109, -0.3489212095737457], [6.96521520614624, -0.6969749331474304], [6.921815872192383, -1.0432958602905273], [6.861207485198975, -1.3870229721069336], [6.783541202545166, -1.727301836013794], [6.689009666442871, -2.063286304473877], [6.577848434448242, -2.3941409587860107], [6.450333595275879, -2.719043493270874], [6.306782245635986, -3.0371861457824707], [6.1475510597229, -3.347777843475342], [5.973036289215088, -3.6500463485717773], [5.7836713790893555, -3.9432404041290283], [5.579927444458008, -4.226630687713623], [5.362310886383057, -4.499513149261475], [5.1313629150390625, -4.761209011077881], [4.887657642364502, -5.011067867279053], [4.631800651550293, -5.248468399047852], [4.364428520202637, -5.472820281982422], [4.08620548248291, -5.683566093444824], [3.797823905944824, -5.880181312561035], [3.5, -6.062177658081055], [3.193474531173706, -6.229102611541748], [2.87900972366333, -6.38054084777832], [2.557387113571167, -6.516116142272949], [2.2294065952301025, -6.635491371154785], [1.895883321762085, -6.738369941711426], [1.5576465129852295, -6.824495315551758], [1.215537190437317, -6.8936543464660645], [0.870405912399292, -6.945674419403076], [0.5231106281280518, -6.980426788330078], [0.17451484501361847, -6.997824192047119], [-0.17451484501361847, -6.997824192047119], [-0.5231106281280518, -6.980426788330078], [-0.870405912399292, -6.945674419403076], [-1.215537190437317, -6.8936543464660645], [-1.5576465129852295, -6.824495315551758], [-1.895883321762085, -6.738369941711426], [-2.2294065952301025, -6.635491371154785], [-2.557387113571167, -6.516116142272949], [-2.87900972366333, -6.38054084777832], [-3.193474531173706, -6.229102611541748], [-3.5, -6.062177658081055], [-3.797823905944824, -5.880181312561035], [-4.08620548248291, -5.683566093444824], [-4.364428520202637, -5.472820281982422], [-4.631800651550293, -5.248468399047852], [-4.887657642364502, -5.011067867279053], [-5.1313629150390625, -4.761209011077881], [-5.362310886383057, -4.499513149261475], [-5.579927444458008, -4.226630687713623], [-5.7836713790893555, -3.9432404041290283], [-5.973036289215088, -3.6500463485717773], [-6.1475510597229, -3.347777843475342], [-6.306782245635986, -3.0371861457824707], [-6.450333595275879, -2.719043493270874], [-6.577848434448242, -2.3941409587860107], [-6.689009666442871, -2.063286304473877], [-6.783541202545166, -1.727301836013794], [-6.861207485198975, -1.3870229721069336], [-6.921815872192383, -1.0432958602905273], [-6.96521520614624, -0.6969749331474304]])


# 将所有内轮廓合并成一个 geometry（组合）
holes_union = unary_union([hole])

# 求差集：外轮廓 - 所有内轮廓
pocket = outer.difference(holes_union)

# 储存所有缩小的路径
# paths = []
#
# # 初始区域
# current = pocket
# step = 0.05  # 每次缩小的距离
#
# while not current.is_empty and current.area > 0.1:
#     paths.append(current)
#     current = current.buffer(-step)
#
# # === 可视化 ===
# fig, ax = plt.subplots(figsize=(6, 6))
# colors = plt.cm.viridis_r  # colormap
#
# for i, path in enumerate(paths):
#     color = colors(i / len(paths))
#     if path.geom_type == 'Polygon':
#         xs, ys = path.exterior.xy
#         ax.fill(xs, ys, color=color, alpha=0.6, edgecolor='black')
#     elif path.geom_type == 'MultiPolygon':
#         for geom in path.geoms:
#             xs, ys = geom.exterior.xy
#             ax.fill(xs, ys, color=color, alpha=0.6, edgecolor='black')
#
# ax.set_title("逐步缩小的区域（pocketing）")
# ax.axis('equal')
# plt.show()


# 储存所有缩小的路径
paths = []

# 初始区域
current_outer = outer  # 只对外轮廓进行操作
step = 0.5  # 每次缩小的距离

while not current_outer.is_empty and current_outer.area > 0.1:
    # 将当前外轮廓与内轮廓结合形成完整区域
    current_pocket = current_outer.difference(holes_union)
    paths.append(current_pocket)
    current_outer = current_outer.buffer(-step)  # 只缩小外轮廓
    if isinstance(current_pocket, sg.MultiPolygon):
        polygons = list(current_pocket.geoms)
        MultiFlag = True
    else:
        polygons = [current_pocket]
    for poly in polygons:
        if poly.is_empty or poly.area <= 0.1:
            continue
        coords = list(poly.exterior.coords)  # 提取外边界点
        try:
            x_coords, y_coords = zip(*coords)
        except:
            x_coords, y_coords, z = zip(*coords)
        plt.plot(x_coords, y_coords, '-o', markersize=1, label='Points Path')
        plt.show()
# === 可视化 ===
fig, ax = plt.subplots(figsize=(6, 6))
colors = plt.cm.viridis_r  # colormap

for i, path in enumerate(paths):
    color = colors(i / len(paths))
    if path.geom_type == 'Polygon':
        # 绘制外轮廓
        xs, ys = path.exterior.xy
        ax.fill(xs, ys, color=color, alpha=0.6, edgecolor='black')
        # 绘制内轮廓
        for interior in path.interiors:
            xs, ys = interior.xy
            ax.fill(xs, ys, color='white')  # 内轮廓保持白色
    elif path.geom_type == 'MultiPolygon':
        for geom in path.geoms:
            # 绘制外轮廓
            xs, ys = geom.exterior.xy
            ax.fill(xs, ys, color=color, alpha=0.6, edgecolor='black')
            # 绘制内轮廓
            for interior in geom.interiors:
                xs, ys = interior.xy
                ax.fill(xs, ys, color='white')  # 内轮廓保持白色

# 绘制原始内轮廓以清晰显示
for hole in holes_union.geoms if hasattr(holes_union, 'geoms') else [holes_union]:
    xs, ys = hole.exterior.xy
    ax.fill(xs, ys, color='white', edgecolor='black')

ax.set_title("外轮廓逐步缩小（内轮廓保持不变）")
ax.axis('equal')
plt.show()