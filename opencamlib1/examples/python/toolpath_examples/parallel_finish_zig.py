# simple parallel finish toolpath example
# Anders Wallin 2014-02-23

import time

from opencamlib import ocl, camvtk
import ngc_writer  # G-code output is produced by this module
import math
import shapely.affinity as sa
import shapely.geometry as sg
from shapely.affinity import scale


# 创建一个简单的“Zig”图案，我们只在一个方向上切割。
# 第一行在ymin
# 最后一行是ymax
def YdirectionZigPath(xmin, xmax, ymin, ymax, Ny):
    paths = []
    dy = float(ymax - ymin) / (Ny - 1)  # the y step-over
    for n in range(0, Ny):
        path = ocl.Path()
        y = ymin + n * dy  # current y-coordinate
        if n == Ny - 1:
            assert (y == ymax)
        elif n == 0:
            assert (y == ymin)
        p1 = ocl.Point(xmin, y, 0)  # start-point of line
        p2 = ocl.Point(xmax, y, 0)  # end-point of line
        l = ocl.Line(p1, p2)  # line-object
        path.append(l)  # add the line to the path
        paths.append(path)
    return paths


# 双向锯齿
def YdirectionAlternatingZigPath(xmin, xmax, ymin, ymax, Ny):
    paths = []
    dy = float(ymax - ymin) / (Ny - 1)  # y 步长
    for n in range(0, Ny):
        path = ocl.Path()
        y = ymin + n * dy  # 当前 y 坐标
        if (n == Ny - 1):
            assert (y == ymax)
        elif (n == 0):
            assert (y == ymin)
        p1 = ocl.Point(xmin, y, 0)  # 起始点
        p2 = ocl.Point(xmax, y, 0)  # 结束点

        if n % 2 == 0:  # 偶数行从左到右
            l = ocl.Line(p1, p2)
        else:  # 奇数行从右到左
            l = ocl.Line(p2, p1)

        path.append(l)
        paths.append(path)
    return paths


"""
螺旋路径1
这种路径适用于需要处理圆形区域的情况，像是孔的加工或者从外向内的轮廓铣削。
turns: 螺旋的圈数。
segments: 每圈的分段数，总分段数为 turns * segments。
从内到外
"""


def spiralPath(xmin, xmax, ymin, ymax, turns, segments):
    center_x = (xmin + xmax) / 2
    center_y = (ymin + ymax) / 2
    max_radius = min((xmax - xmin) / 2, (ymax - ymin) / 2)
    total_segments = turns * segments
    angle_step = 2 * math.pi / segments  # 每个分段的角度增量
    radius_step = max_radius / total_segments  # 每个分段的半径增量
    paths = []  # 存储路径点
    for i in range(total_segments):
        path = ocl.Path()
        angle = i * angle_step  # 当前角度
        radius = i * radius_step  # 当前半径
        x = center_x + radius * math.cos(angle)
        y = center_y + radius * math.sin(angle)
        p = ocl.Point(x, y)
        if i > 0:  # 从第二个点开始创建线段
            l = ocl.Line(prev_p, p)
            path.append(l)
        prev_p = p
        paths.append(path)
    return paths


"""
螺旋路径2
center_x:螺旋路径的中心 X 坐标
center_y:螺旋路径的中心 Y 坐标。
radius:螺旋的最大半径，定义路径的覆盖范围。
z_depth:刀具的切削深度（Z 轴位置）。
num_turns:螺旋的圈数，即路径从外到内的次数。
step_over:刀具每圈之间的间隔，用于控制路径密度（通常小于刀具直径）。
从外到内
"""


def SpiralPath(center_x, center_y, radius, z_depth, num_turns, step_over):
    paths = []
    theta_step = 2 * math.pi / 100  # 控制圆滑度（100 步每圈）
    for turn in range(num_turns):
        path = ocl.Path()
        for i in range(101):  # 101 点构成一圈
            theta = i * theta_step + turn * 2 * math.pi
            r = radius - turn * step_over  # 半径逐渐减小
            if r <= 0:  # 超出半径范围
                break
            x = center_x + r * math.cos(theta)
            y = center_y + r * math.sin(theta)
            z = z_depth
            p = ocl.Point(x, y, z)
            if i > 0:  # 从第二个点开始创建线段
                l = ocl.Line(prev_p, p)
                path.append(l)
            prev_p = p
        paths.append(path)
    return paths


"""
从中心开始的螺旋路径
"""


def spiralOutPath(xmin, xmax, ymin, ymax, layers):
    paths = []
    center_x = (xmin + xmax) / 2
    center_y = (ymin + ymax) / 2
    radius_step = min(xmax - xmin, ymax - ymin) / (2 * layers)
    for i in range(layers):
        path = ocl.Path()
        radius = radius_step * (i + 1)
        # path = []
        for angle in range(0, 360, 5):  # 每 5 度
            rad = math.radians(angle)
            x = center_x + radius * math.cos(rad)
            y = center_y + radius * math.sin(rad)
            p = ocl.Point(x, y, 0)
            if i > 0:  # 从第二个点开始创建线段
                l = ocl.Line(prev_p, p)
                path.append(l)
            prev_p = p
        paths.append(path)
    return paths


"""
平行偏移路径
polygon:描述初始区域的多边形顶点，表示要加工的封闭区域。
step_over:每次偏移的距离（通常小于刀具直径），控制路径的密集程度
"""


def OffsetPath(polygon, step_over):
    original_polygon = sg.Polygon(polygon)  # 输入多边形
    paths = []
    current_polygon = original_polygon
    while not current_polygon.is_empty and current_polygon.area > 0:
        try:
            path = ocl.Path()
            coords = list(current_polygon.exterior.coords)  # 提取当前多边形外边界点
            for i in range(len(coords) - 1):  # 创建线段
                p1 = ocl.Point(*coords[i], 0)
                p2 = ocl.Point(*coords[i + 1], 0)
                l = ocl.Line(p1, p2)
                path.append(l)
            paths.append(path)
            # 偏移当前多边形
            current_polygon = current_polygon.buffer(-step_over, resolution=16)
        except:
            pass
    return paths


"""
曲线跟随
curve_points: 曲线点列表（例如从矢量文件中读取）。
z_depth: 切削深度。
"""


def ContourPath(curve_points, z_depth):
    path = ocl.Path()
    for i in range(len(curve_points) - 1):
        p1 = ocl.Point(*curve_points[i], z_depth)
        p2 = ocl.Point(*curve_points[i + 1], z_depth)
        l = ocl.Line(p1, p2)
        path.append(l)
    return [path]


"""
混合路径 (Adaptive Clearing)
自适应清除路径会智能调整切削区域，保持恒定刀具负载，适合高效粗加工。

实现思路： 自适应路径需要不断计算刀具干涉和剩余材料区域，以下是一个简化版思路：

初始化加工区域为一个多边形。
刀具按固定步进（步距和深度）逐步侵入区域。
通过布尔运算计算剩余未加工区域。
根据未加工区域继续生成路径。

initial_region:初始加工区域，定义要清除的几何形状。
tool_diameter:刀具直径，用于计算路径与材料的干涉和刀具负载。
step_over:刀具之间的侧向重叠距离，影响路径密度。
max_depth:最大切削深度，用于控制单次加工的材料移除量。
"""


def AdaptivePath(initial_region, tool_diameter, step_over, max_depth):
    def generate_one_pass(region, tool_diameter, step_over, max_depth):
        # 确定步距：根据刀具直径和步进比例
        step_distance = tool_diameter * step_over
        current_region = region

        # 定义路径存储
        pass_path = []

        # 在区域内生成步进切割路径
        while current_region.area > 1:
            print(1, current_region.area)
            # 获取区域的边界
            boundary = current_region.exterior
            # 缩小区域以模拟刀具轨迹
            offset_region = sa.scale(boundary, xfact=(1 - step_over), yfact=(1 - step_over))
            # 更新路径
            # print(offset_region.area)
            pass_path.append(offset_region)
            # 减去切割过的部分
            current_region = sg.Polygon(offset_region)
            print(2, current_region.area)

        return pass_path

    def calculate_remaining_area(region, path, tool_diameter):
        # 将路径转换为多边形刀具区域
        tool_path = sg.Polygon(path)

        # 缩小刀具区域以模拟实际切割效果
        cut_area = tool_path.buffer(tool_diameter / 2.0)

        # 从当前区域中减去切割区域
        remaining_region = region.difference(cut_area)

        return remaining_region

    region = sg.Polygon(initial_region)
    paths = []
    # while region.area > 0:
    print(region.area)
    path = generate_one_pass(region, tool_diameter, step_over, max_depth)
    # paths.append(path)
    region = calculate_remaining_area(region, path, tool_diameter)
    print(region.area)
    # print(region.area)
    return paths


def pocket(region_points, step_over, max_depth):
    # 创建区域
    region = ocl.Path()
    for point in region_points:
        p1 = ocl.Point(point[0], 0)
        p2 = ocl.Point(point[1], 0)
        l = ocl.Line(p1, p2)
        region.append(l)

    # 创建 Pocket
    zigzag = ocl.ZigZag()
    zigzag.setOrigin(region)
    # zigzag.setBounds(xmin, xmax, ymin, ymax)
    zigzag.setStepover(step_over)
    zigzag.setZ(max_depth)

    # 生成路径
    paths = zigzag.getPaths()
    return paths


# run the actual drop-cutter algorithm
def adaptive_path_drop_cutter(surface, cutter, paths):
    apdc = ocl.AdaptivePathDropCutter()
    # apdc = ocl.AdaptiveWaterline()
    # apdc = ocl.PathDropCutter()
    # apdc.setZ(-1)
    apdc.setSTL(surface)
    apdc.setCutter(cutter)
    # apdc.setSampling(0.04)  # maximum sampling or "step-forward" distance
    # should be set so that we don't loose any detail of the STL model
    # i.e. this number should be similar or smaller than the smallest triangle
    # apdc.setMinSampling(0.01)  # minimum sampling or step-forward distance
    # the algorithm subdivides "steep" portions of the toolpath
    # until we reach this limit.
    # 0.0008
    cl_paths = []
    n_points = 0
    for path in paths:
        apdc.setPath(path)
        apdc.run()
        cl_points = apdc.getCLPoints()
        n_points = n_points + len(cl_points)
        cl_paths.append(cl_points)
    # print(cl_paths, n_points)
    return cl_paths, n_points


# 这可以是任意三角形的源
# 只要它产生一个我们可以使用的ocl.STLSurf（）
def STLSurfaceSource(filename):
    stl = camvtk.STLSurf(filename)
    polydata = stl.src.GetOutput()
    # print(polydata)
    s = ocl.STLSurf()
    camvtk.vtkPolyData2OCLSTL(polydata, s)
    return s


# 筛选单个路径
def filter_path(path, tol):
    f = ocl.LineCLFilter()
    f.setTolerance(tol)
    for p in path:
        p2 = ocl.CLPoint(p.x, p.y, p.z)
        f.addCLPoint(p2)
    f.run()
    return f.getCLPoints()


# 为了减少g代码的大小，我们在这里进行过滤。（这不是严格要求的，可以省略）
# 如果有过滤器的话，我们可以在这里检测到G2/G3电弧。
# 想法:
# 如果原始工具路径中有三个点（p1,p2,p3）
# 和点p2在直线p1-p3的容差范围内
# 然后我们将路径简化为（p1,p3）
def filterCLPaths(cl_paths, tolerance=0.001):
    cl_filtered_paths = []
    t_before = time.time()
    n_filtered = 0
    for cl_path in cl_paths:
        cl_filtered = filter_path(cl_path, tol)

        n_filtered = n_filtered + len(cl_filtered)
        cl_filtered_paths.append(cl_filtered)
    return (cl_filtered_paths, n_filtered)


# 使用ngc_writer并将g代码写入标准输出或文件
def write_zig_gcode_file(filename, n_triangles, t1, n1, tol, t2, n2, toolpath):
    ngc_writer.clearance_height = 5  # XY rapids at this height
    ngc_writer.feed_height = 3  # use z plunge-feed below this height
    ngc_writer.feed = 200  # feedrate
    ngc_writer.plunge_feed = 100  # plunge feedrate
    ngc_writer.metric = False  # metric/inch flag
    ngc_writer.comment(" OpenCAMLib %s" % ocl.version())  # git version-tag
    # it is probably useful to include this in all g-code output, so that bugs/problems can be tracked

    ngc_writer.comment(" STL surface: %s" % filename)
    ngc_writer.comment("   triangles: %d" % n_triangles)
    ngc_writer.comment(" OpenCAMLib::AdaptivePathDropCutter run took %.2f s" % t1)
    ngc_writer.comment(" got %d raw CL-points " % n1)
    ngc_writer.comment(" filtering to tolerance %.4f " % (tol))
    ngc_writer.comment(" got %d filtered CL-points. Filter done in %.3f s " % (n2, t2))
    ngc_writer.preamble()
    # a "Zig" or one-way parallel finish path
    # 1) lift to clearance height
    # 2) XY rapid to start of path
    # 3) plunge to correct z-depth
    # 4) feed along path until end 
    for path in toolpath:
        try:
            ngc_writer.pen_up()
            first_pt = path[0]
            ngc_writer.xy_rapid_to(first_pt.x, first_pt.y)
            ngc_writer.pen_down(first_pt.z)
            for p in path[1:]:
                ngc_writer.line_to(p.x, p.y, p.z)
        except:
            pass
    ngc_writer.postamble()  # end of program


# 图像可视化
def vtk_visualize_parallel_finish_zig(stlfile, toolpaths):
    myscreen = camvtk.VTKScreen()
    stl = camvtk.STLSurf(stlfile)
    myscreen.addActor(stl)
    stl.SetSurface()  # try also SetWireframe()
    stl.SetColor(camvtk.cyan)
    # myscreen.camera.SetPosition(15, 13, 7)
    # myscreen.camera.SetFocalPoint(5, 5, 0)

    rapid_height = 5  # XY rapids at this height
    feed_height = 3
    rapidColor = camvtk.pink
    XYrapidColor = camvtk.green
    plungeColor = camvtk.red
    feedColor = camvtk.yellow
    # zig path algorithm:
    # 1) lift to clearance height
    # 2) XY rapid to start of path
    # 3) plunge to correct z-depth
    # 4) feed along path until end
    pos = ocl.Point(0, 0, 0)  # keep track of the current position of the tool
    first = True
    for path in toolpaths:
        try:
            first_pt = path[0]
            if first:  # green sphere at path start
                myscreen.addActor(
                    camvtk.Sphere(center=(first_pt.x, first_pt.y, rapid_height), radius=0.1, color=camvtk.green))
                pos = ocl.Point(first_pt.x, first_pt.y,
                                first_pt.z)  # at start of program, assume we have already a rapid move here
                first = False
            else:  # not the very first move
                # retract up to rapid_height
                myscreen.addActor(
                    camvtk.Line(p1=(pos.x, pos.y, pos.z), p2=(pos.x, pos.y, feed_height), color=plungeColor))
                myscreen.addActor(
                    camvtk.Line(p1=(pos.x, pos.y, feed_height), p2=(pos.x, pos.y, rapid_height), color=rapidColor))
                # XY rapid into position
                myscreen.addActor(
                    camvtk.Line(p1=(pos.x, pos.y, rapid_height), p2=(first_pt.x, first_pt.y, rapid_height),
                                color=XYrapidColor))
                pos = ocl.Point(first_pt.x, first_pt.y, first_pt.z)

            # rapid down to the feed_height
            myscreen.addActor(
                camvtk.Line(p1=(pos.x, pos.y, rapid_height), p2=(pos.x, pos.y, feed_height), color=rapidColor))
            # feed down to CL
            myscreen.addActor(camvtk.Line(p1=(pos.x, pos.y, feed_height), p2=(pos.x, pos.y, pos.z), color=plungeColor))

            # feed along the path
            for p in path[1:]:
                # print(p)
                myscreen.addActor(camvtk.Line(p1=(pos.x, pos.y, pos.z), p2=(p.x, p.y, p.z), color=feedColor))
                pos = ocl.Point(p.x, p.y, p.z)
        except:
            pass

    # END retract up to rapid_height
    myscreen.addActor(camvtk.Line(p1=(pos.x, pos.y, pos.z), p2=(pos.x, pos.y, feed_height), color=plungeColor))
    myscreen.addActor(camvtk.Line(p1=(pos.x, pos.y, feed_height), p2=(pos.x, pos.y, rapid_height), color=rapidColor))
    myscreen.addActor(camvtk.Sphere(center=(pos.x, pos.y, rapid_height), radius=0.1, color=camvtk.red))

    camvtk.drawArrows(myscreen, center=(-0.5, -0.5, -0.5))  # XYZ coordinate arrows
    camvtk.drawOCLtext(myscreen)
    myscreen.render()
    myscreen.iren.Start()


if __name__ == "__main__":
    # stlfile = "guanyuplat.STL"
    stlfile = "夹臂.stl"
    surface = STLSurfaceSource(stlfile)

    # choose a cutter for the operation:
    # http://www.anderswallin.net/2011/08/opencamlib-cutter-shapes/
    diameter = 0.1
    length = 20
    # cutter = ocl.BallCutter(diameter, length)
    cutter = ocl.CylCutter(diameter, length)
    # corner_radius = 0.05
    # cutter = ocl.BullCutter(diameter, corner_radius, length)
    # angle = math.pi/4
    # cutter = ocl.ConeCutter(diameter, angle, length)
    # cutter = cutter.offsetCutter( 0.4 )

    # toolpath is contained in this simple box
    ymin = 0
    ymax = 150
    xmin = 0
    xmax = 100
    Ny = 50  # number of lines in the y-direction

    # paths = YdirectionZigPath(xmin, xmax, ymin, ymax, Ny)  # 单向锯齿
    # paths = YdirectionAlternatingZigPath(xmin, xmax, ymin, ymax, Ny)  # 双向锯齿
    # paths = spiralPath(xmin, xmax, ymin, ymax, 2, 20)  # 螺旋路径1，从内到外
    # paths = SpiralPath(50, 100, 50, 2, 10, 5)  # 螺旋路径2，从外向内
    a2 = [(39.39521408081055, 42.5966682434082), (39.42644500732422, 42.28664779663086), (39.42644500732422, 42.28664779663086), (39.42644500732422, 42.28664779663086), (39.42644500732422, 42.28664779663086), (39.42644500732422, 42.28664779663086), (39.42644500732422, 42.28664779663086), (39.507389068603516, 41.98576354980469), (39.507389068603516, 41.98576354980469), (39.507389068603516, 41.98576354980469), (39.507389068603516, 41.98576354980469), (39.507389068603516, 41.98576354980469), (39.507389068603516, 41.98576354980469), (39.635955810546875, 41.70195770263672), (39.635955810546875, 41.70195770263672), (39.635955810546875, 41.70195770263672), (39.635955810546875, 41.70195770263672), (39.635955810546875, 41.70195770263672), (39.635955810546875, 41.70195770263672), (39.80875015258789, 41.44266128540039), (39.80875015258789, 41.44266128540039), (39.80875015258789, 41.44266128540039), (39.80875015258789, 41.44266128540039), (39.80875015258789, 41.44266128540039), (39.80875015258789, 41.44266128540039), (40.02117919921875, 41.2147331237793), (40.02117919921875, 41.2147331237793), (40.02117919921875, 41.2147331237793), (40.02117919921875, 41.2147331237793), (40.02117919921875, 41.2147331237793), (40.02117919921875, 41.2147331237793), (40.26770782470703, 41.02417755126953), (40.26770782470703, 41.02417755126953), (40.26770782470703, 41.02417755126953), (40.26770782470703, 41.02417755126953), (40.26770782470703, 41.02417755126953), (40.26770782470703, 41.02417755126953), (40.54182815551758, 40.875999450683594), (40.54182815551758, 40.875999450683594), (40.54182815551758, 40.875999450683594), (40.54182815551758, 40.875999450683594), (40.54182815551758, 40.875999450683594), (40.54182815551758, 40.875999450683594), (40.836273193359375, 40.77410888671875), (40.836273193359375, 40.77410888671875), (40.836273193359375, 40.77410888671875), (40.836273193359375, 40.77410888671875), (40.836273193359375, 40.77410888671875), (40.836273193359375, 40.77410888671875), (41.14335632324219, 40.72117614746094), (41.14335632324219, 40.72117614746094), (41.14335632324219, 40.72117614746094), (41.14335632324219, 40.72117614746094), (41.14335632324219, 40.72117614746094), (41.14335632324219, 40.72117614746094), (41.45491027832031, 40.7186164855957), (41.45491027832031, 40.7186164855957), (41.45491027832031, 40.7186164855957), (41.45491027832031, 40.7186164855957), (41.45491027832031, 40.7186164855957), (41.45491027832031, 40.7186164855957), (41.76276779174805, 40.7664909362793), (41.76276779174805, 40.7664909362793), (41.76276779174805, 40.7664909362793), (41.76276779174805, 40.7664909362793), (41.76276779174805, 40.7664909362793), (41.76276779174805, 40.7664909362793), (42.05888366699219, 40.863529205322266), (42.05888366699219, 40.863529205322266), (42.05888366699219, 40.863529205322266), (42.05888366699219, 40.863529205322266), (42.05888366699219, 40.863529205322266), (42.05888366699219, 40.863529205322266), (42.05888366699219, 40.863529205322266), (42.05888366699219, 40.863529205322266), (42.05888366699219, 40.863529205322266), (42.05888366699219, 40.863529205322266), (42.05888366699219, 40.863529205322266), (42.05888366699219, 40.863529205322266), (45.98963165283203, 42.76972961425781), (45.98963165283203, 42.76972961425781), (45.98963165283203, 42.76972961425781), (45.98963165283203, 42.76972961425781), (45.98963165283203, 42.76972961425781), (45.98963165283203, 42.76972961425781), (49.619911193847656, 45.05141067504883), (49.619911193847656, 45.05141067504883), (49.619911193847656, 45.05141067504883), (49.619911193847656, 45.05141067504883), (49.619911193847656, 45.05141067504883), (49.619911193847656, 45.05141067504883), (52.92451477050781, 47.68508529663086), (52.92451477050781, 47.68508529663086), (52.92451477050781, 47.68508529663086), (52.92451477050781, 47.68508529663086), (52.92451477050781, 47.68508529663086), (52.92451477050781, 47.68508529663086), (55.90164566040039, 50.66260528564453), (55.90164566040039, 50.66260528564453), (55.90164566040039, 50.66260528564453), (55.90164566040039, 50.66260528564453), (55.90164566040039, 50.66260528564453), (55.90164566040039, 50.66260528564453), (58.56782150268555, 53.99625015258789), (58.56782150268555, 53.99625015258789), (58.56782150268555, 53.99625015258789), (58.56782150268555, 53.99625015258789), (58.56782150268555, 53.99625015258789), (58.56782150268555, 53.99625015258789), (60.866058349609375, 57.58118438720703), (60.866058349609375, 57.58118438720703), (60.866058349609375, 57.58118438720703), (60.866058349609375, 57.58118438720703), (60.866058349609375, 57.58118438720703), (60.866058349609375, 57.58118438720703), (61.45250701904297, 58.63529586791992), (61.45250701904297, 58.63529586791992), (61.87462615966797, 59.600948333740234), (61.87462615966797, 59.600948333740234), (61.87462615966797, 59.600948333740234), (61.87462615966797, 59.600948333740234), (61.87462615966797, 59.600948333740234), (61.87462615966797, 59.600948333740234), (62.13265609741211, 60.62281036376953), (62.13265609741211, 60.62281036376953), (62.13265609741211, 60.62281036376953), (62.13265609741211, 60.62281036376953), (62.13265609741211, 60.62281036376953), (62.13265609741211, 60.62281036376953), (62.219383239746094, 61.673133850097656), (62.219383239746094, 61.673133850097656), (62.219383239746094, 61.673133850097656), (62.219383239746094, 61.673133850097656), (62.219383239746094, 130.40940856933594), (62.219383239746094, 130.40940856933594), (62.219383239746094, 130.40940856933594), (62.219383239746094, 130.40940856933594), (62.219383239746094, 61.673133850097656), (62.219383239746094, 61.673133850097656), (62.052249908447266, 132.42645263671875), (62.052249908447266, 132.42645263671875), (62.219383239746094, 130.40940856933594), (62.219383239746094, 130.40940856933594), (62.052249908447266, 132.42645263671875), (62.052249908447266, 132.42645263671875), (61.55538558959961, 134.38848876953125), (61.55538558959961, 134.38848876953125), (62.052249908447266, 132.42645263671875), (62.052249908447266, 132.42645263671875), (61.55538558959961, 134.38848876953125), (61.55538558959961, 134.38848876953125), (60.74237823486328, 136.24197387695312), (60.74237823486328, 136.24197387695312), (61.55538558959961, 134.38848876953125), (61.55538558959961, 134.38848876953125), (60.74237823486328, 136.24197387695312), (60.74237823486328, 136.24197387695312), (59.635398864746094, 137.93637084960938), (59.635398864746094, 137.93637084960938), (60.74237823486328, 136.24197387695312), (60.74237823486328, 136.24197387695312), (59.635398864746094, 137.93637084960938), (59.635398864746094, 137.93637084960938), (58.26461410522461, 139.42544555664062), (58.26461410522461, 139.42544555664062), (59.635398864746094, 137.93637084960938), (59.635398864746094, 137.93637084960938), (58.26461410522461, 139.42544555664062), (58.26461410522461, 139.42544555664062), (56.667388916015625, 140.66859436035156), (56.667388916015625, 140.66859436035156), (58.26461410522461, 139.42544555664062), (58.26461410522461, 139.42544555664062), (56.667388916015625, 140.66859436035156), (56.667388916015625, 140.66859436035156), (54.887413024902344, 141.6318817138672), (54.887413024902344, 141.6318817138672), (56.667388916015625, 140.66859436035156), (56.667388916015625, 140.66859436035156), (54.887413024902344, 141.6318817138672), (54.887413024902344, 141.6318817138672), (52.97309112548828, 142.28907775878906), (52.97309112548828, 142.28907775878906), (54.887413024902344, 141.6318817138672), (54.887413024902344, 141.6318817138672), (52.97309112548828, 142.28907775878906), (52.97309112548828, 142.28907775878906), (50.97675323486328, 142.62220764160156), (50.97675323486328, 142.62220764160156), (52.97309112548828, 142.28907775878906), (52.97309112548828, 142.28907775878906), (50.97675323486328, 142.62220764160156), (50.97675323486328, 142.62220764160156), (48.9527587890625, 142.62220764160156), (48.9527587890625, 142.62220764160156), (50.97675323486328, 142.62220764160156), (50.97675323486328, 142.62220764160156), (48.9527587890625, 142.62220764160156), (48.9527587890625, 142.62220764160156), (46.9564208984375, 142.28907775878906), (46.9564208984375, 142.28907775878906), (48.9527587890625, 142.62220764160156), (48.9527587890625, 142.62220764160156), (46.9564208984375, 142.28907775878906), (46.9564208984375, 142.28907775878906), (45.04209899902344, 141.6318817138672), (45.04209899902344, 141.6318817138672), (46.9564208984375, 142.28907775878906), (46.9564208984375, 142.28907775878906), (45.04209899902344, 141.6318817138672), (45.04209899902344, 141.6318817138672), (43.26206588745117, 140.66859436035156), (43.26206588745117, 140.66859436035156), (45.04209899902344, 141.6318817138672), (45.04209899902344, 141.6318817138672), (43.26206588745117, 140.66859436035156), (43.26206588745117, 140.66859436035156), (41.66489791870117, 139.42544555664062), (41.66489791870117, 139.42544555664062), (43.26206588745117, 140.66859436035156), (43.26206588745117, 140.66859436035156), (41.66489791870117, 139.42544555664062), (41.66489791870117, 139.42544555664062), (40.29410934448242, 137.93637084960938), (40.29410934448242, 137.93637084960938), (41.66489791870117, 139.42544555664062), (41.66489791870117, 139.42544555664062), (40.29410934448242, 137.93637084960938), (40.29410934448242, 137.93637084960938), (39.1871337890625, 136.24197387695312), (39.1871337890625, 136.24197387695312), (40.29410934448242, 137.93637084960938), (40.29410934448242, 137.93637084960938), (39.1871337890625, 136.24197387695312), (39.1871337890625, 136.24197387695312), (38.37406539916992, 134.38848876953125), (38.37406539916992, 134.38848876953125), (39.1871337890625, 136.24197387695312), (39.1871337890625, 136.24197387695312), (38.37406539916992, 134.38848876953125), (38.37406539916992, 134.38848876953125), (37.877262115478516, 132.42645263671875), (37.877262115478516, 132.42645263671875), (38.37406539916992, 134.38848876953125), (38.37406539916992, 134.38848876953125), (37.877262115478516, 132.42645263671875), (37.877262115478516, 132.42645263671875), (37.71012878417969, 130.40940856933594), (37.71012878417969, 130.40940856933594), (37.71012878417969, 130.40940856933594), (37.877262115478516, 132.42645263671875), (37.877262115478516, 132.42645263671875), (37.71012878417969, 130.40940856933594), (37.71012878417969, 130.40940856933594), (37.71012878417969, 130.40940856933594), (37.71012878417969, 130.40940856933594), (37.71012878417969, 130.40940856933594), (37.71012878417969, 130.40940856933594), (39.39521408081055, 42.5966682434082), (37.71012878417969, 130.40940856933594), (37.71012878417969, 130.40940856933594), (37.71012878417969, 130.40940856933594)]

    a1 = [(29.428482055664062, 116.8678207397461), (29.402494430541992, 117.18267822265625), (29.402494430541992, 117.18267822265625), (29.402494430541992, 117.18267822265625), (29.402494430541992, 117.18267822265625), (29.402494430541992, 117.18267822265625), (29.402494430541992, 117.18267822265625), (29.325246810913086, 117.489013671875), (29.325246810913086, 117.489013671875), (29.325246810913086, 117.489013671875), (29.325246810913086, 117.489013671875), (29.325246810913086, 117.489013671875), (29.325246810913086, 117.489013671875), (29.19876480102539, 117.77853393554688), (29.19876480102539, 117.77853393554688), (29.19876480102539, 117.77853393554688), (29.19876480102539, 117.77853393554688), (29.19876480102539, 117.77853393554688), (29.19876480102539, 117.77853393554688), (29.026567459106445, 118.04338836669922), (29.026567459106445, 118.04338836669922), (29.026567459106445, 118.04338836669922), (29.026567459106445, 118.04338836669922), (29.026567459106445, 118.04338836669922), (29.026567459106445, 118.04338836669922), (28.813182830810547, 118.27642059326172), (28.813182830810547, 118.27642059326172), (28.813182830810547, 118.27642059326172), (28.813182830810547, 118.27642059326172), (28.813182830810547, 118.27642059326172), (28.813182830810547, 118.27642059326172), (28.564571380615234, 118.47130584716797), (28.564571380615234, 118.47130584716797), (28.564571380615234, 118.47130584716797), (28.564571380615234, 118.47130584716797), (28.564571380615234, 118.47130584716797), (28.564571380615234, 118.47130584716797), (28.28729248046875, 118.62277221679688), (28.28729248046875, 118.62277221679688), (28.28729248046875, 118.62277221679688), (28.28729248046875, 118.62277221679688), (28.28729248046875, 118.62277221679688), (28.28729248046875, 118.62277221679688), (27.988969802856445, 118.72673034667969), (27.988969802856445, 118.72673034667969), (27.988969802856445, 118.72673034667969), (27.988969802856445, 118.72673034667969), (27.988969802856445, 118.72673034667969), (27.988969802856445, 118.72673034667969), (27.677595138549805, 118.78034973144531), (27.677595138549805, 118.78034973144531), (27.677595138549805, 118.78034973144531), (27.677595138549805, 118.78034973144531), (27.677595138549805, 118.78034973144531), (27.677595138549805, 118.78034973144531), (27.361690521240234, 118.78219604492188), (27.361690521240234, 118.78219604492188), (27.361690521240234, 118.78219604492188), (27.361690521240234, 118.78219604492188), (27.361690521240234, 118.78219604492188), (27.361690521240234, 118.78219604492188), (27.049720764160156, 118.73220825195312), (27.049720764160156, 118.73220825195312), (27.049720764160156, 118.73220825195312), (27.049720764160156, 118.73220825195312), (27.049720764160156, 118.73220825195312), (27.049720764160156, 118.73220825195312), (26.750205993652344, 118.63172912597656), (26.750205993652344, 118.63172912597656), (26.750205993652344, 118.63172912597656), (26.750205993652344, 118.63172912597656), (26.750205993652344, 118.63172912597656), (26.750205993652344, 118.63172912597656), (26.4711971282959, 118.4834976196289), (26.4711971282959, 118.4834976196289), (26.4711971282959, 118.4834976196289), (26.4711971282959, 118.4834976196289), (26.4711971282959, 118.4834976196289), (26.4711971282959, 118.4834976196289), (26.220321655273438, 118.29151916503906), (26.220321655273438, 118.29151916503906), (26.220321655273438, 118.29151916503906), (26.220321655273438, 118.29151916503906), (13.232290267944336, 106.53959655761719), (13.232290267944336, 106.53959655761719), (26.220321655273438, 118.29151916503906), (26.220321655273438, 118.29151916503906), (13.232290267944336, 106.53959655761719), (13.232290267944336, 106.53959655761719), (13.232290267944336, 106.53959655761719), (13.232290267944336, 106.53959655761719), (12.502908706665039, 105.75947570800781), (12.502908706665039, 105.75947570800781), (12.502908706665039, 105.75947570800781), (12.502908706665039, 105.75947570800781), (12.502908706665039, 105.75947570800781), (12.502908706665039, 105.75947570800781), (11.913418769836426, 104.86894226074219), (11.913418769836426, 104.86894226074219), (11.913418769836426, 104.86894226074219), (11.913418769836426, 104.86894226074219), (11.913418769836426, 104.86894226074219), (11.913418769836426, 104.86894226074219), (11.48027229309082, 103.89278411865234), (11.48027229309082, 103.89278411865234), (11.48027229309082, 103.89278411865234), (11.48027229309082, 103.89278411865234), (11.48027229309082, 103.89278411865234), (11.48027229309082, 103.89278411865234), (11.215389251708984, 102.85816955566406), (11.215389251708984, 102.85816955566406), (11.215389251708984, 102.85816955566406), (11.215389251708984, 102.85816955566406), (11.215389251708984, 102.85816955566406), (11.215389251708984, 102.85816955566406), (11.126338958740234, 101.79393005371094), (11.126338958740234, 101.79393005371094), (11.126338958740234, 101.79393005371094), (11.126338958740234, 101.79393005371094), (11.126338958740234, 75.4771957397461), (11.126338958740234, 75.4771957397461), (11.126338958740234, 101.79393005371094), (11.126338958740234, 101.79393005371094), (11.126338958740234, 75.4771957397461), (11.126338958740234, 75.4771957397461), (11.126338958740234, 75.4771957397461), (11.126338958740234, 75.4771957397461), (11.215567588806152, 74.41195678710938), (11.215567588806152, 74.41195678710938), (11.215567588806152, 74.41195678710938), (11.215567588806152, 74.41195678710938), (11.480927467346191, 73.37643432617188), (11.480927467346191, 73.37643432617188), (11.215567588806152, 74.41195678710938), (11.215567588806152, 74.41195678710938), (11.480927467346191, 73.37643432617188), (11.480927467346191, 73.37643432617188), (11.914909362792969, 72.3995132446289), (11.914909362792969, 72.3995132446289), (11.480927467346191, 73.37643432617188), (11.480927467346191, 73.37643432617188), (11.914909362792969, 72.3995132446289), (11.914909362792969, 72.3995132446289), (12.505412101745605, 71.50846862792969), (12.505412101745605, 71.50846862792969), (11.914909362792969, 72.3995132446289), (11.914909362792969, 72.3995132446289), (12.505412101745605, 71.50846862792969), (12.505412101745605, 71.50846862792969), (13.236045837402344, 70.72814178466797), (13.236045837402344, 70.72814178466797), (12.505412101745605, 71.50846862792969), (12.505412101745605, 71.50846862792969), (13.236045837402344, 70.72814178466797), (13.236045837402344, 70.72814178466797), (26.221393585205078, 58.997257232666016), (26.221393585205078, 58.997257232666016), (26.221393585205078, 58.997257232666016), (26.221393585205078, 58.997257232666016), (13.236045837402344, 70.72814178466797), (13.236045837402344, 70.72814178466797), (26.472389221191406, 58.8055419921875), (26.472389221191406, 58.8055419921875), (26.221393585205078, 58.997257232666016), (26.221393585205078, 58.997257232666016), (26.472389221191406, 58.8055419921875), (26.472389221191406, 58.8055419921875), (26.751399993896484, 58.65755844116211), (26.751399993896484, 58.65755844116211), (26.472389221191406, 58.8055419921875), (26.472389221191406, 58.8055419921875), (26.751399993896484, 58.65755844116211), (26.751399993896484, 58.65755844116211), (27.050912857055664, 58.55730056762695), (27.050912857055664, 58.55730056762695), (26.751399993896484, 58.65755844116211), (26.751399993896484, 58.65755844116211), (27.050912857055664, 58.55730056762695), (27.050912857055664, 58.55730056762695), (27.362764358520508, 58.50751876831055), (27.362764358520508, 58.50751876831055), (27.050912857055664, 58.55730056762695), (27.050912857055664, 58.55730056762695), (27.362764358520508, 58.50751876831055), (27.362764358520508, 58.50751876831055), (27.678607940673828, 58.50952911376953), (27.678607940673828, 58.50952911376953), (27.362764358520508, 58.50751876831055), (27.362764358520508, 58.50751876831055), (27.678607940673828, 58.50952911376953), (27.678607940673828, 58.50952911376953), (27.989805221557617, 58.56327819824219), (27.989805221557617, 58.56327819824219), (27.678607940673828, 58.50952911376953), (27.678607940673828, 58.50952911376953), (27.989805221557617, 58.56327819824219), (27.989805221557617, 58.56327819824219), (28.288005828857422, 58.66733169555664), (28.288005828857422, 58.66733169555664), (27.989805221557617, 58.56327819824219), (27.989805221557617, 58.56327819824219), (28.288005828857422, 58.66733169555664), (28.288005828857422, 58.66733169555664), (28.565109252929688, 58.81884765625), (28.565109252929688, 58.81884765625), (28.288005828857422, 58.66733169555664), (28.288005828857422, 58.66733169555664), (28.565109252929688, 58.81884765625), (28.565109252929688, 58.81884765625), (28.813600540161133, 59.013755798339844), (28.813600540161133, 59.013755798339844), (28.565109252929688, 58.81884765625), (28.565109252929688, 58.81884765625), (28.813600540161133, 59.013755798339844), (28.813600540161133, 59.013755798339844), (29.026805877685547, 59.24674987792969), (29.026805877685547, 59.24674987792969), (28.813600540161133, 59.013755798339844), (28.813600540161133, 59.013755798339844), (29.026805877685547, 59.24674987792969), (29.026805877685547, 59.24674987792969), (29.198944091796875, 59.511558532714844), (29.198944091796875, 59.511558532714844), (29.026805877685547, 59.24674987792969), (29.026805877685547, 59.24674987792969), (29.198944091796875, 59.511558532714844), (29.198944091796875, 59.511558532714844), (29.325305938720703, 59.80098342895508), (29.325305938720703, 59.80098342895508), (29.198944091796875, 59.511558532714844), (29.198944091796875, 59.511558532714844), (29.325305938720703, 59.80098342895508), (29.325305938720703, 59.80098342895508), (29.40255355834961, 60.10723114013672), (29.40255355834961, 60.10723114013672), (29.325305938720703, 59.80098342895508), (29.325305938720703, 59.80098342895508), (29.40255355834961, 60.10723114013672), (29.40255355834961, 60.10723114013672), (29.428482055664062, 60.421974182128906), (29.428482055664062, 60.421974182128906), (29.40255355834961, 60.10723114013672), (29.40255355834961, 60.10723114013672), (29.428482055664062, 60.421974182128906), (29.428482055664062, 60.421974182128906), (29.428482055664062, 88.63404083251953), (29.428482055664062, 88.63404083251953), (29.428482055664062, 88.63404083251953), (29.428482055664062, 88.63404083251953), (29.428482055664062, 88.63404083251953), (29.428482055664062, 88.63404083251953), (29.428482055664062, 60.421974182128906), (29.428482055664062, 60.421974182128906), (29.428482055664062, 88.63404083251953), (29.428482055664062, 88.63404083251953), (29.428482055664062, 88.63404083251953), (29.428482055664062, 116.8678207397461), (29.428482055664062, 88.63404083251953), (29.428482055664062, 88.63404083251953), (29.428482055664062, 88.63404083251953)]

    a3 = [(88.39338684082031, 107.71829986572266), (88.30469512939453, 108.78005981445312), (88.30469512939453, 108.78005981445312), (88.30469512939453, 108.78005981445312), (88.30469512939453, 108.78005981445312), (88.30469512939453, 108.78005981445312), (88.30469512939453, 108.78005981445312), (88.04109954833984, 109.81239318847656), (88.04109954833984, 109.81239318847656), (88.04109954833984, 109.81239318847656), (88.04109954833984, 109.81239318847656), (88.04109954833984, 109.81239318847656), (88.04109954833984, 109.81239318847656), (87.60985565185547, 110.78669738769531), (87.60985565185547, 110.78669738769531), (87.60985565185547, 110.78669738769531), (87.60985565185547, 110.78669738769531), (87.60985565185547, 110.78669738769531), (87.60985565185547, 110.78669738769531), (87.02298736572266, 111.67595672607422), (87.02298736572266, 111.67595672607422), (87.02298736572266, 111.67595672607422), (87.02298736572266, 111.67595672607422), (87.02298736572266, 111.67595672607422), (87.02298736572266, 111.67595672607422), (86.29670715332031, 112.45552825927734), (86.29670715332031, 112.45552825927734), (86.29670715332031, 112.45552825927734), (86.29670715332031, 112.45552825927734), (86.29670715332031, 112.45552825927734), (86.29670715332031, 112.45552825927734), (85.45115661621094, 113.10380554199219), (85.45115661621094, 113.10380554199219), (85.45115661621094, 113.10380554199219), (85.45115661621094, 113.10380554199219), (71.66793823242188, 121.95335388183594), (71.66793823242188, 121.95335388183594), (85.45115661621094, 113.10380554199219), (85.45115661621094, 113.10380554199219), (71.66793823242188, 121.95335388183594), (71.66793823242188, 121.95335388183594), (71.66793823242188, 121.95335388183594), (71.66793823242188, 121.95335388183594), (71.38896179199219, 122.10159301757812), (71.38896179199219, 122.10159301757812), (71.38896179199219, 122.10159301757812), (71.38896179199219, 122.10159301757812), (71.38896179199219, 122.10159301757812), (71.38896179199219, 122.10159301757812), (71.08941650390625, 122.20207977294922), (71.08941650390625, 122.20207977294922), (71.08941650390625, 122.20207977294922), (71.08941650390625, 122.20207977294922), (71.08941650390625, 122.20207977294922), (71.08941650390625, 122.20207977294922), (70.77747344970703, 122.2520751953125), (70.77747344970703, 122.2520751953125), (70.77747344970703, 122.2520751953125), (70.77747344970703, 122.2520751953125), (70.77747344970703, 122.2520751953125), (70.77747344970703, 122.2520751953125), (70.46154022216797, 122.25023651123047), (70.46154022216797, 122.25023651123047), (70.46154022216797, 122.25023651123047), (70.46154022216797, 122.25023651123047), (70.46154022216797, 122.25023651123047), (70.46154022216797, 122.25023651123047), (70.15019989013672, 122.19662475585938), (70.15019989013672, 122.19662475585938), (70.15019989013672, 122.19662475585938), (70.15019989013672, 122.19662475585938), (70.15019989013672, 122.19662475585938), (70.15019989013672, 122.19662475585938), (69.85184478759766, 122.09266662597656), (69.85184478759766, 122.09266662597656), (69.85184478759766, 122.09266662597656), (69.85184478759766, 122.09266662597656), (69.85184478759766, 122.09266662597656), (69.85184478759766, 122.09266662597656), (69.57459259033203, 121.94119262695312), (69.57459259033203, 121.94119262695312), (69.57459259033203, 121.94119262695312), (69.57459259033203, 121.94119262695312), (69.57459259033203, 121.94119262695312), (69.57459259033203, 121.94119262695312), (69.325927734375, 121.74630737304688), (69.325927734375, 121.74630737304688), (69.325927734375, 121.74630737304688), (69.325927734375, 121.74630737304688), (69.325927734375, 121.74630737304688), (69.325927734375, 121.74630737304688), (69.11260223388672, 121.51327514648438), (69.11260223388672, 121.51327514648438), (69.11260223388672, 121.51327514648438), (69.11260223388672, 121.51327514648438), (69.11260223388672, 121.51327514648438), (69.11260223388672, 121.51327514648438), (68.94033813476562, 121.2484130859375), (68.94033813476562, 121.2484130859375), (68.94033813476562, 121.2484130859375), (68.94033813476562, 121.2484130859375), (68.94033813476562, 121.2484130859375), (68.94033813476562, 121.2484130859375), (68.81388854980469, 120.95890045166016), (68.81388854980469, 120.95890045166016), (68.81388854980469, 120.95890045166016), (68.81388854980469, 120.95890045166016), (68.81388854980469, 120.95890045166016), (68.81388854980469, 120.95890045166016), (68.73661041259766, 120.6525650024414), (68.73661041259766, 120.6525650024414), (68.73661041259766, 120.6525650024414), (68.73661041259766, 120.6525650024414), (68.73661041259766, 120.6525650024414), (68.73661041259766, 120.6525650024414), (68.71062469482422, 120.33769226074219), (68.71062469482422, 120.33769226074219), (68.71062469482422, 120.33769226074219), (68.71062469482422, 120.33769226074219), (68.71062469482422, 73.14962005615234), (68.71062469482422, 73.14962005615234), (68.71062469482422, 120.33769226074219), (68.71062469482422, 120.33769226074219), (68.71062469482422, 73.14962005615234), (68.71062469482422, 73.14962005615234), (68.71062469482422, 73.14962005615234), (68.71062469482422, 73.14962005615234), (68.73944091796875, 72.81813049316406), (68.73944091796875, 72.81813049316406), (68.73944091796875, 72.81813049316406), (68.73944091796875, 72.81813049316406), (68.82506561279297, 72.4966049194336), (68.82506561279297, 72.4966049194336), (68.73944091796875, 72.81813049316406), (68.73944091796875, 72.81813049316406), (68.82506561279297, 72.4966049194336), (68.82506561279297, 72.4966049194336), (68.96492767333984, 72.19469451904297), (68.96492767333984, 72.19469451904297), (68.82506561279297, 72.4966049194336), (68.82506561279297, 72.4966049194336), (68.96492767333984, 72.19469451904297), (68.96492767333984, 72.19469451904297), (69.15480041503906, 71.92145538330078), (69.15480041503906, 71.92145538330078), (68.96492767333984, 72.19469451904297), (68.96492767333984, 72.19469451904297), (69.15480041503906, 71.92145538330078), (69.15480041503906, 71.92145538330078), (69.3890151977539, 71.68510437011719), (69.3890151977539, 71.68510437011719), (69.15480041503906, 71.92145538330078), (69.15480041503906, 71.92145538330078), (69.3890151977539, 71.68510437011719), (69.3890151977539, 71.68510437011719), (69.66048431396484, 71.49272918701172), (69.66048431396484, 71.49272918701172), (69.3890151977539, 71.68510437011719), (69.3890151977539, 71.68510437011719), (69.66048431396484, 71.49272918701172), (69.66048431396484, 71.49272918701172), (69.96112823486328, 71.35012817382812), (69.96112823486328, 71.35012817382812), (69.66048431396484, 71.49272918701172), (69.66048431396484, 71.49272918701172), (69.96112823486328, 71.35012817382812), (69.96112823486328, 71.35012817382812), (70.2818603515625, 71.26155853271484), (70.2818603515625, 71.26155853271484), (69.96112823486328, 71.35012817382812), (69.96112823486328, 71.35012817382812), (70.2818603515625, 71.26155853271484), (70.2818603515625, 71.26155853271484), (70.6130599975586, 71.22969818115234), (70.6130599975586, 71.22969818115234), (70.2818603515625, 71.26155853271484), (70.2818603515625, 71.26155853271484), (70.6130599975586, 71.22969818115234), (70.6130599975586, 71.22969818115234), (70.94478607177734, 71.2554931640625), (70.94478607177734, 71.2554931640625), (70.6130599975586, 71.22969818115234), (70.6130599975586, 71.22969818115234), (70.94478607177734, 71.2554931640625), (70.94478607177734, 71.2554931640625), (71.26709747314453, 71.33818054199219), (71.26709747314453, 71.33818054199219), (70.94478607177734, 71.2554931640625), (70.94478607177734, 71.2554931640625), (71.26709747314453, 71.33818054199219), (71.26709747314453, 71.33818054199219), (71.57027435302734, 71.47526550292969), (71.57027435302734, 71.47526550292969), (71.26709747314453, 71.33818054199219), (71.26709747314453, 71.33818054199219), (71.57027435302734, 71.47526550292969), (71.57027435302734, 71.47526550292969), (71.84523010253906, 71.66263580322266), (71.84523010253906, 71.66263580322266), (71.57027435302734, 71.47526550292969), (71.57027435302734, 71.47526550292969), (71.84523010253906, 71.66263580322266), (71.84523010253906, 71.66263580322266), (86.04210662841797, 83.25920867919922), (86.04210662841797, 83.25920867919922), (86.04210662841797, 83.25920867919922), (86.04210662841797, 83.25920867919922), (71.84523010253906, 71.66263580322266), (71.84523010253906, 71.66263580322266), (86.72723388671875, 83.90874481201172), (86.72723388671875, 83.90874481201172), (86.04210662841797, 83.25920867919922), (86.04210662841797, 83.25920867919922), (86.72723388671875, 83.90874481201172), (86.72723388671875, 83.90874481201172), (87.30933380126953, 84.6520004272461), (87.30933380126953, 84.6520004272461), (86.72723388671875, 83.90874481201172), (86.72723388671875, 83.90874481201172), (87.30933380126953, 84.6520004272461), (87.30933380126953, 84.6520004272461), (87.77576446533203, 85.47279357910156), (87.77576446533203, 85.47279357910156), (87.30933380126953, 84.6520004272461), (87.30933380126953, 84.6520004272461), (87.77576446533203, 85.47279357910156), (87.77576446533203, 85.47279357910156), (88.11637878417969, 86.35327911376953), (88.11637878417969, 86.35327911376953), (87.77576446533203, 85.47279357910156), (87.77576446533203, 85.47279357910156), (88.11637878417969, 86.35327911376953), (88.11637878417969, 86.35327911376953), (88.32374572753906, 87.27429962158203), (88.32374572753906, 87.27429962158203), (88.11637878417969, 86.35327911376953), (88.11637878417969, 86.35327911376953), (88.32374572753906, 87.27429962158203), (88.32374572753906, 87.27429962158203), (88.39338684082031, 88.2157974243164), (88.39338684082031, 88.2157974243164), (88.32374572753906, 87.27429962158203), (88.32374572753906, 87.27429962158203), (88.39338684082031, 88.2157974243164), (88.39338684082031, 88.2157974243164), (88.39338684082031, 106.48664093017578), (88.39338684082031, 106.48664093017578), (88.39338684082031, 106.48664093017578), (88.39338684082031, 106.48664093017578), (88.39338684082031, 106.48664093017578), (88.39338684082031, 106.48664093017578), (88.39338684082031, 88.2157974243164), (88.39338684082031, 88.2157974243164), (88.39338684082031, 106.48664093017578), (88.39338684082031, 106.48664093017578), (88.39338684082031, 106.48664093017578), (88.39338684082031, 107.71829986572266), (88.39338684082031, 106.48664093017578), (88.39338684082031, 106.48664093017578), (88.39338684082031, 106.48664093017578)]

    b1 = [(4.542946815490723, 8.22421932220459), (4.542946815490723, 8.22421932220459), (4.542946815490723, 8.22421932220459), (4.542946815490723, 8.22421932220459), (4.542946815490723, 8.22421932220459), (4.542946815490723, 8.22421932220459), (4.542946815490723, 24.22422218322754), (4.542946815490723, 24.22422218322754), (4.542946815490723, 24.22422218322754), (4.542946815490723, 24.22422218322754), (4.542946815490723, 24.22422218322754), (4.542946815490723, 24.22422218322754), (4.542946815490723, 24.22422218322754), (4.542946815490723, 24.22422218322754), (4.542946815490723, 24.22422218322754), (4.542946815490723, 24.22422218322754), (4.542946815490723, 24.22422218322754), (4.542946815490723, 24.22422218322754), (13.618946075439453, 24.22422218322754), (13.618946075439453, 24.22422218322754), (4.542946815490723, 24.22422218322754), (4.542946815490723, 24.22422218322754), (4.542946815490723, 24.22422218322754), (4.542946815490723, 24.22422218322754), (4.542946815490723, 24.22422218322754), (4.542946815490723, 24.22422218322754), (4.542946815490723, 24.22422218322754), (4.542946815490723, 24.22422218322754), (13.618946075439453, 24.22422218322754), (13.618946075439453, 24.22422218322754), (13.618946075439453, 24.22422218322754), (13.618946075439453, 24.22422218322754), (13.618946075439453, 22.44643783569336), (13.618946075439453, 22.44643783569336), (13.618946075439453, 22.44643783569336), (13.618946075439453, 22.44643783569336), (13.618946075439453, 22.44643783569336), (13.618946075439453, 22.44643783569336), (13.618946075439453, 22.44643783569336), (13.618946075439453, 22.44643783569336), (13.618946075439453, 22.44643783569336), (13.618946075439453, 22.44643783569336), (13.618946075439453, 22.44643783569336), (13.618946075439453, 22.44643783569336), (6.694972515106201, 22.44643783569336), (6.694972515106201, 22.44643783569336), (6.694972515106201, 22.44643783569336), (6.694972515106201, 22.44643783569336), (6.694972515106201, 22.44643783569336), (6.694972515106201, 22.44643783569336), (6.694972515106201, 22.44643783569336), (6.694972515106201, 22.44643783569336), (6.694972515106201, 22.44643783569336), (6.694972515106201, 17.487377166748047), (6.694972515106201, 17.487377166748047), (6.694972515106201, 22.44643783569336), (6.694972515106201, 22.44643783569336), (6.694972515106201, 22.44643783569336), (6.694972515106201, 17.487377166748047), (6.694972515106201, 17.487377166748047), (6.694972515106201, 17.487377166748047), (13.05752944946289, 17.487377166748047), (6.694972515106201, 17.487377166748047), (13.05752944946289, 17.487377166748047), (13.05752944946289, 17.487377166748047), (13.05752944946289, 17.487377166748047), (13.05752944946289, 17.487377166748047), (13.05752944946289, 17.487377166748047), (13.05752944946289, 15.709593772888184), (13.05752944946289, 15.709593772888184), (13.05752944946289, 17.487377166748047), (13.05752944946289, 17.487377166748047), (13.05752944946289, 17.487377166748047), (13.05752944946289, 17.487377166748047), (13.05752944946289, 17.487377166748047), (13.05752944946289, 17.487377166748047), (13.05752944946289, 15.709593772888184), (13.05752944946289, 15.709593772888184), (6.694972515106201, 15.709593772888184), (6.694972515106201, 15.709593772888184), (6.694972515106201, 15.709593772888184), (13.05752944946289, 15.709593772888184), (13.05752944946289, 15.709593772888184), (6.694972515106201, 15.709593772888184), (6.694972515106201, 15.709593772888184), (6.694972515106201, 15.709593772888184), (6.694972515106201, 10.00198745727539), (6.694972515106201, 10.00198745727539), (6.694972515106201, 15.709593772888184), (6.694972515106201, 15.709593772888184), (6.694972515106201, 15.709593772888184), (6.694972515106201, 15.709593772888184), (6.694972515106201, 15.709593772888184), (6.694972515106201, 15.709593772888184), (6.694972515106201, 10.00198745727539), (6.694972515106201, 10.00198745727539), (14.086782455444336, 10.00198745727539), (14.086782455444336, 10.00198745727539), (14.086782455444336, 10.00198745727539), (6.694972515106201, 10.00198745727539), (6.694972515106201, 10.00198745727539), (14.086782455444336, 10.00198745727539), (14.086782455444336, 10.00198745727539), (14.086782455444336, 10.00198745727539), (14.086782455444336, 8.22421932220459), (14.086782455444336, 8.22421932220459), (14.086782455444336, 10.00198745727539), (14.086782455444336, 10.00198745727539), (14.086782455444336, 10.00198745727539), (14.086782455444336, 10.00198745727539), (14.086782455444336, 10.00198745727539), (14.086782455444336, 10.00198745727539), (14.086782455444336, 8.22421932220459), (14.086782455444336, 8.22421932220459), (4.542946815490723, 8.22421932220459), (4.542946815490723, 8.22421932220459), (4.542946815490723, 8.22421932220459), (14.086782455444336, 8.22421932220459), (14.086782455444336, 8.22421932220459), (4.542946815490723, 8.22421932220459), (4.542946815490723, 8.22421932220459), (4.542946815490723, 8.22421932220459)]

    jb_in = [(-2.0, 1.1933672493320466e-15), (-1.9601603746414185, 0.2898547053337097), (-1.9601603746414185, 0.2898547053337097), (-1.9258345365524292, 0.539593517780304), (-1.9258345365524292, 0.539593517780304), (-1.8092705011367798, 0.807951033115387), (-1.8092705011367798, 0.807951033115387), (-1.7088388204574585, 1.039167881011963), (-1.7088388204574585, 1.039167881011963), (-1.5241951942443848, 1.2661253213882446), (-1.5241951942443848, 1.2661253213882446), (-1.3651063442230225, 1.4616719484329224), (-1.3651063442230225, 1.4616719484329224), (-1.12607741355896, 1.6303969621658325), (-1.12607741355896, 1.6303969621658325), (-0.9201300740242004, 1.7757704257965088), (-0.9201300740242004, 1.7757704257965088), (-0.6444435715675354, 1.8737493753433228), (-0.6444435715675354, 1.8737493753433228), (-0.40691202878952026, 1.9581681489944458), (-0.40691202878952026, 1.9581681489944458), (-0.11501428484916687, 1.9781345129013062), (-0.11501428484916687, 1.9781345129013062), (0.13648483157157898, 1.9953374862670898), (0.13648483157157898, 1.9953374862670898), (0.4229450523853302, 1.9358104467391968), (0.4229450523853302, 1.9358104467391968), (0.669759213924408, 1.8845218420028687), (0.669759213924408, 1.8845218420028687), (0.9295364618301392, 1.7499160766601562), (0.9295364618301392, 1.7499160766601562), (1.1533606052398682, 1.6339397430419922), (1.1533606052398682, 1.6339397430419922), (1.3671884536743164, 1.4342385530471802), (1.3671884536743164, 1.4342385530471802), (1.5514225959777832, 1.2621759176254272), (1.5514225959777832, 1.2621759176254272), (1.7034423351287842, 1.0121899843215942), (1.7034423351287842, 1.0121899843215942), (1.8344225883483887, 0.7968021631240845), (1.8344225883483887, 0.7968021631240845), (1.9133596420288086, 0.5150719881057739), (1.9133596420288086, 0.5150719881057739), (1.9813718795776367, 0.2723332941532135), (1.9813718795776367, 0.2723332941532135), (1.9813718795776367, -0.020246516913175583), (1.9813718795776367, -0.2723332941532135), (1.9813718795776367, -0.020246516913175583), (1.9024348258972168, -0.5540634393692017), (1.9813718795776367, -0.2723332941532135), (1.8344225883483887, -0.7968021631240845), (1.9024348258972168, -0.5540634393692017), (1.6824028491973877, -1.0467880964279175), (1.8344225883483887, -0.7968021631240845), (1.5514225959777832, -1.2621759176254272), (1.6824028491973877, -1.0467880964279175), (1.337594747543335, -1.4618771076202393), (1.5514225959777832, -1.2621759176254272), (1.1533606052398682, -1.6339397430419922), (1.337594747543335, -1.4618771076202393), (0.893583357334137, -1.7685455083847046), (1.1533606052398682, -1.6339397430419922), (0.669759213924408, -1.8845218420028687), (0.893583357334137, -1.7685455083847046), (0.38329899311065674, -1.9440488815307617), (0.669759213924408, -1.8845218420028687), (0.13648483157157898, -1.9953374862670898), (0.38329899311065674, -1.9440488815307617), (-0.15541291236877441, -1.9753711223602295), (0.13648483157157898, -1.9953374862670898), (-0.40691202878952026, -1.9581681489944458), (-0.15541291236877441, -1.9753711223602295), (-0.6825985312461853, -1.8601891994476318), (-0.40691202878952026, -1.9581681489944458), (-0.9201300740242004, -1.7757704257965088), (-0.6825985312461853, -1.8601891994476318), (-1.1591590642929077, -1.6070454120635986), (-0.9201300740242004, -1.7757704257965088), (-1.3651063442230225, -1.4616719484329224), (-1.1591590642929077, -1.6070454120635986), (-1.5497499704360962, -1.2347145080566406), (-1.3651063442230225, -1.4616719484329224), (-1.7088388204574585, -1.039167881011963), (-1.5497499704360962, -1.2347145080566406), (-1.825402855873108, -0.7708103656768799), (-1.7088388204574585, -1.039167881011963), (-1.9258345365524292, -0.539593517780304), (-1.825402855873108, -0.7708103656768799), (-1.9656741619110107, -0.24973882734775543), (-1.9258345365524292, -0.539593517780304), (-2.0, 1.1933672493320466e-15), (-1.9656741619110107, -0.24973882734775543)]

    jb_out = [(11.627593994140625, 0.5), (11.901049613952637, 0.5), (11.627593994140625, 0.5), (10.36021614074707, 0.5), (10.36021614074707, 0.5), (10.232913970947266, 0.5), (12.123717308044434, 0.5), (12.196854591369629, 0.5), (12.034402847290039, 0.5), (12.123717308044434, 0.5), (11.901049613952637, 0.5), (12.034402847290039, 0.5), (12.346331596374512, 0.5), (12.452285766601562, 0.5), (12.267241477966309, 0.5), (12.346331596374512, 0.5), (12.196854591369629, 0.5), (12.267241477966309, 0.5), (13.123807907104492, 0.5), (14.179259300231934, 0.5), (12.633345603942871, 0.5), (13.123807907104492, 0.5), (12.452285766601562, 0.5), (12.633345603942871, 0.5), (10.232913970947266, 0.5963740348815918), (10.232913970947266, 3.5), (10.232913970947266, 0.5), (10.232913970947266, 0.5963740348815918), (14.179259300231934, 1.9168226718902588), (14.179259300231934, 3.5), (14.179259300231934, 0.5), (14.179259300231934, 1.9168226718902588), (14.179259300231934, 3.5), (14.405412673950195, 3.5), (14.405412673950195, 3.5), (15.714285850524902, 3.5), (9.366897583007812, 3.5), (6.5, 3.5), (10.232913970947266, 3.5), (9.366897583007812, 3.5), (6.5, 3.5), (6.305832386016846, 3.4781224727630615), (6.305832386016846, 3.4781224727630615), (6.054958343505859, 3.4498558044433594), (6.054958343505859, 3.4498558044433594), (6.024291515350342, 3.4391250610351562), (6.024291515350342, 3.4391250610351562), (5.984668254852295, 3.425260305404663), (5.984668254852295, 3.425260305404663), (5.830904006958008, 3.3714559078216553), (5.830904006958008, 3.3714559078216553), (5.632232666015625, 3.3019378185272217), (5.632232666015625, 3.3019378185272217), (5.57713508605957, 3.267317771911621), (5.57713508605957, 3.267317771911621), (5.505946636199951, 3.2225868701934814), (5.505946636199951, 3.2225868701934814), (5.395596981048584, 3.153249740600586), (5.395596981048584, 3.153249740600586), (5.253020286560059, 3.0636630058288574), (5.253020286560059, 3.0636630058288574), (5.1839375495910645, 2.994580030441284), (5.1839375495910645, 2.994580030441284), (5.09467887878418, 2.9053213596343994), (5.09467887878418, 2.9053213596343994), (5.025595664978027, 2.836238384246826), (5.025595664978027, 2.836238384246826), (4.936336994171143, 2.7469797134399414), (4.936336994171143, 2.7469797134399414), (4.866999626159668, 2.6366302967071533), (4.866999626159668, 2.6366302967071533), (4.7774128913879395, 2.494053363800049), (4.7774128913879395, 2.494053363800049), (4.742793083190918, 2.4389560222625732), (4.742793083190918, 2.4389560222625732), (4.698062419891357, 2.367767572402954), (4.698062419891357, 2.367767572402954), (4.644257545471191, 2.214003086090088), (4.644257545471191, 2.214003086090088), (4.574739456176758, 2.015331745147705), (4.574739456176758, 2.015331745147705), (4.564008712768555, 1.9846649169921875), (4.564008712768555, 1.9846649169921875), (4.550144195556641, 1.9450418949127197), (4.550144195556641, 1.9450418949127197), (4.528266906738281, 1.7508741617202759), (4.528266906738281, 1.7508741617202759), (4.5, 1.5), (4.5, 0.845563530921936), (4.5, 2.500417966888645e-15), (4.5, 1.5), (4.5, 0.845563530921936), (-4.5, 1.5), (-4.5, 0.654436469078064), (-4.5, 0.654436469078064), (-4.5, 2.530914329363352e-15), (-4.5, 3.051509037317081e-15), (-6.5, 3.5), (-6.249125957489014, 3.471733331680298), (-6.249125957489014, 3.471733331680298), (-6.054958343505859, 3.4498558044433594), (-6.054958343505859, 3.4498558044433594), (-6.0153350830078125, 3.435991048812866), (-6.0153350830078125, 3.435991048812866), (-5.984668254852295, 3.425260305404663), (-5.984668254852295, 3.425260305404663), (-5.785996913909912, 3.3557422161102295), (-5.785996913909912, 3.3557422161102295), (-5.632232666015625, 3.3019378185272217), (-5.632232666015625, 3.3019378185272217), (-5.561044216156006, 3.257206916809082), (-5.561044216156006, 3.257206916809082), (-5.505946636199951, 3.2225868701934814), (-5.505946636199951, 3.2225868701934814), (-5.363369941711426, 3.133000135421753), (-5.363369941711426, 3.133000135421753), (-5.253020286560059, 3.0636630058288574), (-5.253020286560059, 3.0636630058288574), (-5.163761615753174, 2.9744043350219727), (-5.163761615753174, 2.9744043350219727), (-5.09467887878418, 2.9053213596343994), (-5.09467887878418, 2.9053213596343994), (-5.005420207977295, 2.8160626888275146), (-5.005420207977295, 2.8160626888275146), (-4.936336994171143, 2.7469797134399414), (-4.936336994171143, 2.7469797134399414), (-4.846750259399414, 2.604402780532837), (-4.846750259399414, 2.604402780532837), (-4.7774128913879395, 2.494053363800049), (-4.7774128913879395, 2.494053363800049), (-4.732682228088379, 2.4228649139404297), (-4.732682228088379, 2.4228649139404297), (-4.698062419891357, 2.367767572402954), (-4.698062419891357, 2.367767572402954), (-4.628544330596924, 2.1690962314605713), (-4.628544330596924, 2.1690962314605713), (-4.574739456176758, 2.015331745147705), (-4.574739456176758, 2.015331745147705), (-4.560874938964844, 1.9757087230682373), (-4.560874938964844, 1.9757087230682373), (-4.550144195556641, 1.9450418949127197), (-4.550144195556641, 1.9450418949127197), (-4.521877288818359, 1.6941677331924438), (-4.521877288818359, 1.6941677331924438), (-4.5, 1.5), (-10.0, 3.5), (-8.027018547058105, 3.5), (-8.027018547058105, 3.5), (-6.5, 3.5), (-10.194168090820312, 3.4781224727630615), (-10.0, 3.5), (-10.44504165649414, 3.4498558044433594), (-10.194168090820312, 3.4781224727630615), (-10.4757080078125, 3.4391250610351562), (-10.44504165649414, 3.4498558044433594), (-10.515331268310547, 3.425260305404663), (-10.4757080078125, 3.4391250610351562), (-10.669095993041992, 3.3714559078216553), (-10.515331268310547, 3.425260305404663), (-10.867767333984375, 3.3019378185272217), (-10.669095993041992, 3.3714559078216553), (-10.92286491394043, 3.267317771911621), (-10.867767333984375, 3.3019378185272217), (-10.994053840637207, 3.2225868701934814), (-10.92286491394043, 3.267317771911621), (-11.104403495788574, 3.153249740600586), (-10.994053840637207, 3.2225868701934814), (-11.246979713439941, 3.0636630058288574), (-11.104403495788574, 3.153249740600586), (-11.316062927246094, 2.994580030441284), (-11.246979713439941, 3.0636630058288574), (-11.40532112121582, 2.9053213596343994), (-11.316062927246094, 2.994580030441284), (-11.474404335021973, 2.836238384246826), (-11.40532112121582, 2.9053213596343994), (-11.5636625289917, 2.7469797134399414), (-11.474404335021973, 2.836238384246826), (-11.632999420166016, 2.6366302967071533), (-11.5636625289917, 2.7469797134399414), (-11.722586631774902, 2.494053363800049), (-11.632999420166016, 2.6366302967071533), (-11.757206916809082, 2.4389560222625732), (-11.722586631774902, 2.494053363800049), (-11.8019380569458, 2.367767572402954), (-11.757206916809082, 2.4389560222625732), (-11.855742454528809, 2.214003086090088), (-11.8019380569458, 2.367767572402954), (-11.925260543823242, 2.015331745147705), (-11.855742454528809, 2.214003086090088), (-11.935991287231445, 1.9846649169921875), (-11.925260543823242, 2.015331745147705), (-11.94985580444336, 1.9450418949127197), (-11.935991287231445, 1.9846649169921875), (-11.971733093261719, 1.7508741617202759), (-11.94985580444336, 1.9450418949127197), (-12.0, 1.5), (-11.971733093261719, 1.7508741617202759), (-12.0, -1.458337426185608), (-12.0, 0.2093041092157364), (-12.0, 0.2093041092157364), (-12.0, 1.5), (-12.036847114562988, -1.6587963104248047), (-12.0, -1.458337426185608), (-12.065364837646484, -1.8139443397521973), (-12.036847114562988, -1.6587963104248047), (-12.171087265014648, -1.9881974458694458), (-12.065364837646484, -1.8139443397521973), (-12.252912521362305, -2.123063325881958), (-12.171087265014648, -1.9881974458694458), (-12.413690567016602, -2.24833083152771), (-12.252912521362305, -2.123063325881958), (-12.538126945495605, -2.345283269882202), (-12.413690567016602, -2.24833083152771), (-12.732941627502441, -2.405189037322998), (-12.538126945495605, -2.345283269882202), (-12.883721351623535, -2.4515540599823), (-12.732941627502441, -2.405189037322998), (15.714285850524902, 3.5), (15.714285850524902, 4.627418041229248), (15.714285850524902, 4.627418041229248), (15.714285850524902, 5.5), (14.006083488464355, 7.461584091186523), (13.714285850524902, 7.5), (14.231924057006836, 7.431851863861084), (14.006083488464355, 7.461584091186523), (14.503835678100586, 7.319222450256348), (14.231924057006836, 7.431851863861084), (14.714285850524902, 7.232050895690918), (14.503835678100586, 7.319222450256348), (14.947781562805176, 7.052883148193359), (14.714285850524902, 7.232050895690918), (15.128499031066895, 6.91421365737915), (14.947781562805176, 7.052883148193359), (15.307666778564453, 6.680717468261719), (15.128499031066895, 6.91421365737915), (15.44633674621582, 6.5), (15.307666778564453, 6.680717468261719), (15.558965682983398, 6.22808837890625), (15.44633674621582, 6.5), (15.646137237548828, 6.017638206481934), (15.558965682983398, 6.22808837890625), (15.684553146362305, 5.725841045379639), (15.646137237548828, 6.017638206481934), (15.714285850524902, 5.5), (15.684553146362305, 5.725841045379639), (13.714285850524902, 7.5), (-0.31409746408462524, 7.5), (-0.31409746408462524, 7.5), (-11.1715726852417, 7.5), (-12.352290153503418, 7.093381404876709), (-12.585786819458008, 6.91421365737915), (-12.1715726852417, 7.232050895690918), (-12.352290153503418, 7.093381404876709), (-11.89966106414795, 7.344680309295654), (-12.1715726852417, 7.232050895690918), (-11.689210891723633, 7.431851863861084), (-11.89966106414795, 7.344680309295654), (-11.39741325378418, 7.4702677726745605), (-11.689210891723633, 7.431851863861084), (-11.1715726852417, 7.5), (-11.39741325378418, 7.4702677726745605), (-12.585786819458008, 6.91421365737915), (-17.43769073486328, 2.062309741973877), (-17.43769073486328, 2.062309741973877), (-21.192893981933594, -1.6928932666778564), (-21.31509017944336, -2.9242262840270996), (-21.192893981933594, -3.1071066856384277), (-21.409666061401367, -2.7826833724975586), (-21.31509017944336, -2.9242262840270996), (-21.45257568359375, -2.5669612884521484), (-21.409666061401367, -2.7826833724975586), (-21.48578643798828, -2.4000000953674316), (-21.45257568359375, -2.5669612884521484), (-21.4428768157959, -2.1842780113220215), (-21.48578643798828, -2.4000000953674316), (-21.409666061401367, -2.0173165798187256), (-21.4428768157959, -2.1842780113220215), (-21.2874698638916, -1.8344361782073975), (-21.409666061401367, -2.0173165798187256), (-21.192893981933594, -1.6928932666778564), (-21.2874698638916, -1.8344361782073975), (-17.8929500579834, -5.14963960647583), (-17.75113296508789, -5.031654357910156), (-18.00271224975586, -5.2409563064575195), (-17.8929500579834, -5.14963960647583), (-18.175025939941406, -5.306838512420654), (-18.00271224975586, -5.2409563064575195), (-18.308391571044922, -5.357828617095947), (-18.175025939941406, -5.306838512420654), (-18.492748260498047, -5.364551067352295), (-18.308391571044922, -5.357828617095947), (-18.635435104370117, -5.369753837585449), (-18.492748260498047, -5.364551067352295), (-18.812089920043945, -5.316596508026123), (-18.635435104370117, -5.369753837585449), (-18.948814392089844, -5.275454998016357), (-18.812089920043945, -5.316596508026123), (-19.098848342895508, -5.168111324310303), (-18.948814392089844, -5.275454998016357), (-19.214969635009766, -5.085031509399414), (-19.098848342895508, -5.168111324310303), (-21.192893981933594, -3.1071066856384277), (-20.32994270324707, -3.970057487487793), (-20.32994270324707, -3.970057487487793), (-19.214969635009766, -5.085031509399414), (-13.286879539489746, -2.5242316722869873), (-12.883721351623535, -2.4515540599823), (-13.807779312133789, -2.6181347370147705), (-13.286879539489746, -2.5242316722869873), (-14.198898315429688, -2.739971399307251), (-13.807779312133789, -2.6181347370147705), (-14.704243659973145, -2.897390127182007), (-14.198898315429688, -2.739971399307251), (-15.077354431152344, -3.066526174545288), (-14.704243659973145, -2.897390127182007), (-15.559432029724121, -3.28505802154541), (-15.077354431152344, -3.066526174545288), (-15.908838272094727, -3.4989116191864014), (-15.559432029724121, -3.28505802154541), (-16.360288619995117, -3.7752206325531006), (-15.908838272094727, -3.4989116191864014), (-16.6806583404541, -4.030527591705322), (-16.360288619995117, -3.7752206325531006), (-17.094593048095703, -4.360396862030029), (-16.6806583404541, -4.030527591705322), (-17.38103485107422, -4.653260231018066), (-17.094593048095703, -4.360396862030029), (-17.75113296508789, -5.031654357910156), (-17.38103485107422, -4.653260231018066)]

    a = [(40, 40), (60, 60), (61, 133), (50, 148), (37, 130)]
    # paths = OffsetPath(jb, 0.2)  # 平行偏移路径
    b = [(45, 50), (60, 60), (61, 133), (50, 130), (45, 120), (45, 50)]
    paths = ContourPath(jb_out, 0)  # 曲线跟随
    # paths = AdaptivePath([(40, 40), (60, 60), (61, 133), (50, 148), (37, 130)], 3, 0.5, 1)  # 自适应混合路径
    # paths = spiralOutPath(xmin, xmax, ymin, ymax, 3)  # 从外向内

    # cutter_diameter = 3.0
    # step_over = 5.0
    # max_depth = 5.0
    # region_points = [
    #     (0.0, 0.0),
    #     (50.0, 0.0),
    #     (50.0, 50.0),
    #     (0.0, 50.0),
    # ]
    # paths = pocket(region_points, step_over, max_depth)

    # now project onto the STL surface
    t_before = time.time()

    (raw_toolpath, n_raw) = adaptive_path_drop_cutter(surface, cutter, paths)
    t1 = time.time()

    # filter raw toolpath to reduce size
    tol = 0.001
    (toolpaths, n_filtered) = filterCLPaths(raw_toolpath, tolerance=0.001)
    t2 = time.time() - t_before

    # output a g-code file
    write_zig_gcode_file(stlfile, surface.size(), t1, n_raw, tol, t2, n_filtered, toolpaths)
    # and/or visualize with VTK
    vtk_visualize_parallel_finish_zig(stlfile, toolpaths)
